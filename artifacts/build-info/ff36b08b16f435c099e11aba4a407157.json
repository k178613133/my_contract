{
	"id": "ff36b08b16f435c099e11aba4a407157",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"challeng/my_contract/1.usdt-token.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2020-09-04\r\n*/\r\n\r\npragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract SuperChal is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 public _decimals;\r\n  string public _symbol;\r\n  string public _name;\r\n\r\n  constructor() public {\r\n    _name = \"TSuperChal\";\r\n    _symbol = \"TChal\";\r\n    _decimals = 18;\r\n    _totalSupply = 21000000000000000000000000;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n   /**\r\n   * @dev Burn `amount` tokens and decreasing the total supply.\r\n   */\r\n  function burn(uint256 amount) public returns (bool) {\r\n    _burn(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n\r\n \r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"challeng/my_contract/1.usdt-token.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"challeng/my_contract/1.usdt-token.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"challeng/my_contract/1.usdt-token.sol\":{\"keccak256\":\"0xe49204884bfc5627d50d773cead0d48d0e33ae1e4bb2d042870aa7caadcd713d\",\"urls\":[\"bzz-raw://deaba8a171c799d3ca5e09848e96add0ef431ddb3de1a12b983f07b6e2408b38\",\"dweb:/ipfs/Qma4iDGoPx6BABLDQBB2oJFMo2XRvAg1HGiBC8f7pCQmAB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"challeng/my_contract/1.usdt-token.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"challeng/my_contract/1.usdt-token.sol\":{\"keccak256\":\"0xe49204884bfc5627d50d773cead0d48d0e33ae1e4bb2d042870aa7caadcd713d\",\"urls\":[\"bzz-raw://deaba8a171c799d3ca5e09848e96add0ef431ddb3de1a12b983f07b6e2408b38\",\"dweb:/ipfs/Qma4iDGoPx6BABLDQBB2oJFMo2XRvAg1HGiBC8f7pCQmAB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"challeng/my_contract/1.usdt-token.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"challeng/my_contract/1.usdt-token.sol\":{\"keccak256\":\"0xe49204884bfc5627d50d773cead0d48d0e33ae1e4bb2d042870aa7caadcd713d\",\"urls\":[\"bzz-raw://deaba8a171c799d3ca5e09848e96add0ef431ddb3de1a12b983f07b6e2408b38\",\"dweb:/ipfs/Qma4iDGoPx6BABLDQBB2oJFMo2XRvAg1HGiBC8f7pCQmAB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "challeng/my_contract/1.usdt-token.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"challeng/my_contract/1.usdt-token.sol\":4671:9099  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"challeng/my_contract/1.usdt-token.sol\":4671:9099  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158204f84afbf90f1f0f1f45ec922fbf8a95afc4659eca7c0a5a33fd1181feac3928c64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158204f84afbf90f1f0f1f45ec922fbf8a95afc4659eca7c0a5a33fd1181feac3928c64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x4F DUP5 0xAF 0xBF SWAP1 CALL CREATE CALL DELEGATECALL 0x5E 0xC9 0x22 0xFB 0xF8 0xA9 GAS 0xFC CHAINID MSIZE 0xEC 0xA7 0xC0 0xA5 LOG3 EXTCODEHASH 0xD1 XOR 0x1F 0xEA 0xC3 SWAP3 DUP13 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4671:4428:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158204f84afbf90f1f0f1f45ec922fbf8a95afc4659eca7c0a5a33fd1181feac3928c64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x4F DUP5 0xAF 0xBF SWAP1 CALL CREATE CALL DELEGATECALL 0x5E 0xC9 0x22 0xFB 0xF8 0xA9 GAS 0xFC CHAINID MSIZE 0xEC 0xA7 0xC0 0xA5 LOG3 EXTCODEHASH 0xD1 XOR 0x1F 0xEA 0xC3 SWAP3 DUP13 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4671:4428:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4671,
									"end": 9099,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4671,
									"end": 9099,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158204f84afbf90f1f0f1f45ec922fbf8a95afc4659eca7c0a5a33fd1181feac3928c64736f6c63430005100032",
									".code": [
										{
											"begin": 4671,
											"end": 9099,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "ADDRESS"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "EQ"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "MSTORE"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "DUP1"
										},
										{
											"begin": 4671,
											"end": 9099,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"challeng/my_contract/1.usdt-token.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"challeng/my_contract/1.usdt-token.sol\":{\"keccak256\":\"0xe49204884bfc5627d50d773cead0d48d0e33ae1e4bb2d042870aa7caadcd713d\",\"urls\":[\"bzz-raw://deaba8a171c799d3ca5e09848e96add0ef431ddb3de1a12b983f07b6e2408b38\",\"dweb:/ipfs/Qma4iDGoPx6BABLDQBB2oJFMo2XRvAg1HGiBC8f7pCQmAB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SuperChal": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"challeng/my_contract/1.usdt-token.sol\":11377:18132  contract SuperChal is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"challeng/my_contract/1.usdt-token.sol\":11703:11953  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"challeng/my_contract/1.usdt-token.sol\":11703:11953  constructor() public {\r... */\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":9886:9903  address msgSender */\n  0x00\n    /* \"challeng/my_contract/1.usdt-token.sol\":9906:9918  _msgSender() */\n  tag_7\n    /* \"challeng/my_contract/1.usdt-token.sol\":9906:9916  _msgSender */\n  shl(0x20, tag_8)\n    /* \"challeng/my_contract/1.usdt-token.sol\":9906:9918  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"challeng/my_contract/1.usdt-token.sol\":9886:9918  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":9934:9943  msgSender */\n  dup1\n    /* \"challeng/my_contract/1.usdt-token.sol\":9925:9931  _owner */\n  0x00\n  dup1\n    /* \"challeng/my_contract/1.usdt-token.sol\":9925:9943  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":9988:9997  msgSender */\n  dup1\n    /* \"challeng/my_contract/1.usdt-token.sol\":9955:9998  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"challeng/my_contract/1.usdt-token.sol\":9984:9985  0 */\n  0x00\n    /* \"challeng/my_contract/1.usdt-token.sol\":9955:9998  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"challeng/my_contract/1.usdt-token.sol\":9855:10004  constructor () internal {\r... */\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":11731:11751  _name = \"TSuperChal\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5453757065724368616c00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":11731:11736  _name */\n  0x06\n    /* \"challeng/my_contract/1.usdt-token.sol\":11731:11751  _name = \"TSuperChal\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":11758:11775  _symbol = \"TChal\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x544368616c000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":11758:11765  _symbol */\n  0x05\n    /* \"challeng/my_contract/1.usdt-token.sol\":11758:11775  _symbol = \"TChal\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":11794:11796  18 */\n  0x12\n    /* \"challeng/my_contract/1.usdt-token.sol\":11782:11791  _decimals */\n  0x04\n  0x00\n    /* \"challeng/my_contract/1.usdt-token.sol\":11782:11796  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":11818:11844  21000000000000000000000000 */\n  0x115eec47f6cf7e35000000\n    /* \"challeng/my_contract/1.usdt-token.sol\":11803:11815  _totalSupply */\n  0x03\n    /* \"challeng/my_contract/1.usdt-token.sol\":11803:11844  _totalSupply = 21000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":11875:11887  _totalSupply */\n  sload(0x03)\n    /* \"challeng/my_contract/1.usdt-token.sol\":11851:11860  _balances */\n  0x01\n    /* \"challeng/my_contract/1.usdt-token.sol\":11851:11872  _balances[msg.sender] */\n  0x00\n    /* \"challeng/my_contract/1.usdt-token.sol\":11861:11871  msg.sender */\n  caller\n    /* \"challeng/my_contract/1.usdt-token.sol\":11851:11872  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"challeng/my_contract/1.usdt-token.sol\":11851:11887  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":11922:11932  msg.sender */\n  caller\n    /* \"challeng/my_contract/1.usdt-token.sol\":11901:11947  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"challeng/my_contract/1.usdt-token.sol\":11918:11919  0 */\n  0x00\n    /* \"challeng/my_contract/1.usdt-token.sol\":11901:11947  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"challeng/my_contract/1.usdt-token.sol\":11934:11946  _totalSupply */\n  sload(0x03)\n    /* \"challeng/my_contract/1.usdt-token.sol\":11901:11947  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"challeng/my_contract/1.usdt-token.sol\":11377:18132  contract SuperChal is Context, IBEP20, Ownable {\r... */\n  jump(tag_13)\n    /* \"challeng/my_contract/1.usdt-token.sol\":3774:3866  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"challeng/my_contract/1.usdt-token.sol\":3819:3834  address payable */\n  0x00\n    /* \"challeng/my_contract/1.usdt-token.sol\":3850:3860  msg.sender */\n  caller\n    /* \"challeng/my_contract/1.usdt-token.sol\":3843:3860  return msg.sender */\n  swap1\n  pop\n    /* \"challeng/my_contract/1.usdt-token.sol\":3774:3866  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"challeng/my_contract/1.usdt-token.sol\":11377:18132  contract SuperChal is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"challeng/my_contract/1.usdt-token.sol\":11377:18132  contract SuperChal is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"challeng/my_contract/1.usdt-token.sol\":11377:18132  contract SuperChal is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"challeng/my_contract/1.usdt-token.sol\":12423:12502  function name() external view returns (string memory) {\r... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_27:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_27)\n    tag_29:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12423:12502  function name() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_30:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":13463:13607  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"challeng/my_contract/1.usdt-token.sol\":13463:13607  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":12558:12645  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":14052:14344  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14052:14344  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":12151:12230  function decimals() external view returns (uint8) {\r... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":11624:11646  uint8 public _decimals */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":14726:14926  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14726:14926  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":15735:15845  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15735:15845  function burn(uint256 amount) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":12699:12805  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"challeng/my_contract/1.usdt-token.sol\":12699:12805  function balanceOf(address account) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":10679:10809  function renounceOwnership() public onlyOwner {\r... */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12013:12092  function getOwner() external view returns (address) {\r... */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":10077:10150  function owner() public view returns (address) {\r... */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":12287:12370  function symbol() external view returns (string memory) {\r... */\n    tag_15:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_60:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_60)\n    tag_62:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12287:12370  function symbol() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_63:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":15398:15649  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15398:15649  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":12999:13149  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_17:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n        /* \"challeng/my_contract/1.usdt-token.sol\":12999:13149  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":11651:11672  string public _symbol */\n    tag_18:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_72:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_72)\n    tag_74:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":11651:11672  string public _symbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_75:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":11677:11696  string public _name */\n    tag_19:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_78:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_78)\n    tag_80:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":11677:11696  string public _name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_81:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":13203:13333  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_20:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_83:\n        /* \"challeng/my_contract/1.usdt-token.sol\":13203:13333  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"challeng/my_contract/1.usdt-token.sol\":10954:11057  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_21:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_86:\n        /* \"challeng/my_contract/1.usdt-token.sol\":10954:11057  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12423:12502  function name() external view returns (string memory) {\r... */\n    tag_26:\n        /* \"challeng/my_contract/1.usdt-token.sol\":12462:12475  string memory */\n      0x60\n        /* \"challeng/my_contract/1.usdt-token.sol\":12491:12496  _name */\n      0x06\n        /* \"challeng/my_contract/1.usdt-token.sol\":12484:12496  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12423:12502  function name() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":13463:13607  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_33:\n        /* \"challeng/my_contract/1.usdt-token.sol\":13531:13535  bool */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":13544:13583  _approve(_msgSender(), spender, amount) */\n      tag_93\n        /* \"challeng/my_contract/1.usdt-token.sol\":13553:13565  _msgSender() */\n      tag_94\n        /* \"challeng/my_contract/1.usdt-token.sol\":13553:13563  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":13553:13565  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"challeng/my_contract/1.usdt-token.sol\":13567:13574  spender */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":13576:13582  amount */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":13544:13552  _approve */\n      tag_96\n        /* \"challeng/my_contract/1.usdt-token.sol\":13544:13583  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_93:\n        /* \"challeng/my_contract/1.usdt-token.sol\":13597:13601  true */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":13590:13601  return true */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":13463:13607  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":12558:12645  function totalSupply() external view returns (uint256) {\r... */\n    tag_35:\n        /* \"challeng/my_contract/1.usdt-token.sol\":12604:12611  uint256 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":12627:12639  _totalSupply */\n      sload(0x03)\n        /* \"challeng/my_contract/1.usdt-token.sol\":12620:12639  return _totalSupply */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12558:12645  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":14052:14344  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_38:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14143:14147  bool */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":14156:14192  _transfer(sender, recipient, amount) */\n      tag_99\n        /* \"challeng/my_contract/1.usdt-token.sol\":14166:14172  sender */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":14174:14183  recipient */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":14185:14191  amount */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":14156:14165  _transfer */\n      tag_100\n        /* \"challeng/my_contract/1.usdt-token.sol\":14156:14192  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_99:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14199:14320  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_101\n        /* \"challeng/my_contract/1.usdt-token.sol\":14208:14214  sender */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":14216:14228  _msgSender() */\n      tag_102\n        /* \"challeng/my_contract/1.usdt-token.sol\":14216:14226  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":14216:14228  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14230:14319  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_103\n        /* \"challeng/my_contract/1.usdt-token.sol\":14268:14274  amount */\n      dup6\n        /* \"challeng/my_contract/1.usdt-token.sol\":14230:14319  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"challeng/my_contract/1.usdt-token.sol\":14230:14241  _allowances */\n      0x02\n        /* \"challeng/my_contract/1.usdt-token.sol\":14230:14249  _allowances[sender] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":14242:14248  sender */\n      dup12\n        /* \"challeng/my_contract/1.usdt-token.sol\":14230:14249  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"challeng/my_contract/1.usdt-token.sol\":14230:14263  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":14250:14262  _msgSender() */\n      tag_104\n        /* \"challeng/my_contract/1.usdt-token.sol\":14250:14260  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":14250:14262  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14230:14263  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"challeng/my_contract/1.usdt-token.sol\":14230:14267  _allowances[sender][_msgSender()].sub */\n      tag_105\n      swap1\n        /* \"challeng/my_contract/1.usdt-token.sol\":14230:14319  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14199:14207  _approve */\n      tag_96\n        /* \"challeng/my_contract/1.usdt-token.sol\":14199:14320  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_101:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14334:14338  true */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":14327:14338  return true */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":14052:14344  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":12151:12230  function decimals() external view returns (uint8) {\r... */\n    tag_40:\n        /* \"challeng/my_contract/1.usdt-token.sol\":12194:12199  uint8 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":12215:12224  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":12208:12224  return _decimals */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12151:12230  function decimals() external view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":11624:11646  uint8 public _decimals */\n    tag_42:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":14726:14926  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_45:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14806:14810  bool */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":14819:14902  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_108\n        /* \"challeng/my_contract/1.usdt-token.sol\":14828:14840  _msgSender() */\n      tag_109\n        /* \"challeng/my_contract/1.usdt-token.sol\":14828:14838  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":14828:14840  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14842:14849  spender */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":14851:14901  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_110\n        /* \"challeng/my_contract/1.usdt-token.sol\":14890:14900  addedValue */\n      dup6\n        /* \"challeng/my_contract/1.usdt-token.sol\":14851:14862  _allowances */\n      0x02\n        /* \"challeng/my_contract/1.usdt-token.sol\":14851:14876  _allowances[_msgSender()] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":14863:14875  _msgSender() */\n      tag_111\n        /* \"challeng/my_contract/1.usdt-token.sol\":14863:14873  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":14863:14875  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14851:14876  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"challeng/my_contract/1.usdt-token.sol\":14851:14885  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":14877:14884  spender */\n      dup10\n        /* \"challeng/my_contract/1.usdt-token.sol\":14851:14885  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"challeng/my_contract/1.usdt-token.sol\":14851:14889  _allowances[_msgSender()][spender].add */\n      tag_112\n      swap1\n        /* \"challeng/my_contract/1.usdt-token.sol\":14851:14901  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14819:14827  _approve */\n      tag_96\n        /* \"challeng/my_contract/1.usdt-token.sol\":14819:14902  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_108:\n        /* \"challeng/my_contract/1.usdt-token.sol\":14916:14920  true */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":14909:14920  return true */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":14726:14926  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":15735:15845  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_48:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15781:15785  bool */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":15794:15821  _burn(_msgSender(), amount) */\n      tag_114\n        /* \"challeng/my_contract/1.usdt-token.sol\":15800:15812  _msgSender() */\n      tag_115\n        /* \"challeng/my_contract/1.usdt-token.sol\":15800:15810  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":15800:15812  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15814:15820  amount */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":15794:15799  _burn */\n      tag_116\n        /* \"challeng/my_contract/1.usdt-token.sol\":15794:15821  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_114:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15835:15839  true */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":15828:15839  return true */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":15735:15845  function burn(uint256 amount) public returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":12699:12805  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_51:\n        /* \"challeng/my_contract/1.usdt-token.sol\":12758:12765  uint256 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":12781:12790  _balances */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":12781:12799  _balances[account] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":12791:12798  account */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":12781:12799  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"challeng/my_contract/1.usdt-token.sol\":12774:12799  return _balances[account] */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12699:12805  function balanceOf(address account) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":10679:10809  function renounceOwnership() public onlyOwner {\r... */\n    tag_53:\n        /* \"challeng/my_contract/1.usdt-token.sol\":10281:10293  _msgSender() */\n      tag_119\n        /* \"challeng/my_contract/1.usdt-token.sol\":10281:10291  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":10281:10293  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"challeng/my_contract/1.usdt-token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":10271:10277  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"challeng/my_contract/1.usdt-token.sol\":10263:10330  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"challeng/my_contract/1.usdt-token.sol\":10774:10775  0 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":10737:10777  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":10758:10764  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":10737:10777  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"challeng/my_contract/1.usdt-token.sol\":10801:10802  0 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":10784:10790  _owner */\n      dup1\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":10784:10803  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":10679:10809  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":12013:12092  function getOwner() external view returns (address) {\r... */\n    tag_55:\n        /* \"challeng/my_contract/1.usdt-token.sol\":12056:12063  address */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":12079:12086  owner() */\n      tag_123\n        /* \"challeng/my_contract/1.usdt-token.sol\":12079:12084  owner */\n      tag_57\n        /* \"challeng/my_contract/1.usdt-token.sol\":12079:12086  owner() */\n      jump\t// in\n    tag_123:\n        /* \"challeng/my_contract/1.usdt-token.sol\":12072:12086  return owner() */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12013:12092  function getOwner() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":10077:10150  function owner() public view returns (address) {\r... */\n    tag_57:\n        /* \"challeng/my_contract/1.usdt-token.sol\":10115:10122  address */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":10138:10144  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":10131:10144  return _owner */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":10077:10150  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":12287:12370  function symbol() external view returns (string memory) {\r... */\n    tag_59:\n        /* \"challeng/my_contract/1.usdt-token.sol\":12328:12341  string memory */\n      0x60\n        /* \"challeng/my_contract/1.usdt-token.sol\":12357:12364  _symbol */\n      0x05\n        /* \"challeng/my_contract/1.usdt-token.sol\":12350:12364  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12287:12370  function symbol() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":15398:15649  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_66:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15483:15487  bool */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":15496:15625  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_130\n        /* \"challeng/my_contract/1.usdt-token.sol\":15505:15517  _msgSender() */\n      tag_131\n        /* \"challeng/my_contract/1.usdt-token.sol\":15505:15515  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":15505:15517  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15519:15526  spender */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":15528:15624  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_132\n        /* \"challeng/my_contract/1.usdt-token.sol\":15567:15582  subtractedValue */\n      dup6\n        /* \"challeng/my_contract/1.usdt-token.sol\":15528:15624  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"challeng/my_contract/1.usdt-token.sol\":15528:15539  _allowances */\n      0x02\n        /* \"challeng/my_contract/1.usdt-token.sol\":15528:15553  _allowances[_msgSender()] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":15540:15552  _msgSender() */\n      tag_133\n        /* \"challeng/my_contract/1.usdt-token.sol\":15540:15550  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":15540:15552  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15528:15553  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"challeng/my_contract/1.usdt-token.sol\":15528:15562  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":15554:15561  spender */\n      dup11\n        /* \"challeng/my_contract/1.usdt-token.sol\":15528:15562  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"challeng/my_contract/1.usdt-token.sol\":15528:15566  _allowances[_msgSender()][spender].sub */\n      tag_105\n      swap1\n        /* \"challeng/my_contract/1.usdt-token.sol\":15528:15624  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15496:15504  _approve */\n      tag_96\n        /* \"challeng/my_contract/1.usdt-token.sol\":15496:15625  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_130:\n        /* \"challeng/my_contract/1.usdt-token.sol\":15639:15643  true */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":15632:15643  return true */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":15398:15649  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":12999:13149  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_69:\n        /* \"challeng/my_contract/1.usdt-token.sol\":13070:13074  bool */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":13083:13125  _transfer(_msgSender(), recipient, amount) */\n      tag_135\n        /* \"challeng/my_contract/1.usdt-token.sol\":13093:13105  _msgSender() */\n      tag_136\n        /* \"challeng/my_contract/1.usdt-token.sol\":13093:13103  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":13093:13105  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"challeng/my_contract/1.usdt-token.sol\":13107:13116  recipient */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":13118:13124  amount */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":13083:13092  _transfer */\n      tag_100\n        /* \"challeng/my_contract/1.usdt-token.sol\":13083:13125  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_135:\n        /* \"challeng/my_contract/1.usdt-token.sol\":13139:13143  true */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":13132:13143  return true */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":12999:13149  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":11651:11672  string public _symbol */\n    tag_71:\n      0x05\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":11677:11696  string public _name */\n    tag_77:\n      0x06\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":13203:13333  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_84:\n        /* \"challeng/my_contract/1.usdt-token.sol\":13277:13284  uint256 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":13300:13311  _allowances */\n      0x02\n        /* \"challeng/my_contract/1.usdt-token.sol\":13300:13318  _allowances[owner] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":13312:13317  owner */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":13300:13318  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"challeng/my_contract/1.usdt-token.sol\":13300:13327  _allowances[owner][spender] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":13319:13326  spender */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":13300:13327  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"challeng/my_contract/1.usdt-token.sol\":13293:13327  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":13203:13333  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":10954:11057  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_87:\n        /* \"challeng/my_contract/1.usdt-token.sol\":10281:10293  _msgSender() */\n      tag_145\n        /* \"challeng/my_contract/1.usdt-token.sol\":10281:10291  _msgSender */\n      tag_95\n        /* \"challeng/my_contract/1.usdt-token.sol\":10281:10293  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"challeng/my_contract/1.usdt-token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":10271:10277  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":10271:10293  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"challeng/my_contract/1.usdt-token.sol\":10263:10330  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"challeng/my_contract/1.usdt-token.sol\":11023:11051  _transferOwnership(newOwner) */\n      tag_148\n        /* \"challeng/my_contract/1.usdt-token.sol\":11042:11050  newOwner */\n      dup2\n        /* \"challeng/my_contract/1.usdt-token.sol\":11023:11041  _transferOwnership */\n      tag_149\n        /* \"challeng/my_contract/1.usdt-token.sol\":11023:11051  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"challeng/my_contract/1.usdt-token.sol\":10954:11057  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":3774:3866  function _msgSender() internal view returns (address payable) {\r... */\n    tag_95:\n        /* \"challeng/my_contract/1.usdt-token.sol\":3819:3834  address payable */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":3850:3860  msg.sender */\n      caller\n        /* \"challeng/my_contract/1.usdt-token.sol\":3843:3860  return msg.sender */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":3774:3866  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":17809:18129  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_96:\n        /* \"challeng/my_contract/1.usdt-token.sol\":17916:17917  0 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":17899:17918  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":17899:17904  owner */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":17899:17918  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"challeng/my_contract/1.usdt-token.sol\":17891:17959  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"challeng/my_contract/1.usdt-token.sol\":17993:17994  0 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":17974:17995  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":17974:17981  spender */\n      dup3\n        /* \"challeng/my_contract/1.usdt-token.sol\":17974:17995  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"challeng/my_contract/1.usdt-token.sol\":17966:18034  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"challeng/my_contract/1.usdt-token.sol\":18073:18079  amount */\n      dup1\n        /* \"challeng/my_contract/1.usdt-token.sol\":18043:18054  _allowances */\n      0x02\n        /* \"challeng/my_contract/1.usdt-token.sol\":18043:18061  _allowances[owner] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":18055:18060  owner */\n      dup6\n        /* \"challeng/my_contract/1.usdt-token.sol\":18043:18061  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"challeng/my_contract/1.usdt-token.sol\":18043:18070  _allowances[owner][spender] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":18062:18069  spender */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":18043:18070  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"challeng/my_contract/1.usdt-token.sol\":18043:18079  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":18107:18114  spender */\n      dup2\n        /* \"challeng/my_contract/1.usdt-token.sol\":18091:18123  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":18100:18105  owner */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":18091:18123  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"challeng/my_contract/1.usdt-token.sol\":18116:18122  amount */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":18091:18123  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"challeng/my_contract/1.usdt-token.sol\":17809:18129  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":16305:16754  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_100:\n        /* \"challeng/my_contract/1.usdt-token.sol\":16417:16418  0 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":16399:16419  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":16399:16405  sender */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":16399:16419  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"challeng/my_contract/1.usdt-token.sol\":16391:16461  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"challeng/my_contract/1.usdt-token.sol\":16497:16498  0 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":16476:16499  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":16476:16485  recipient */\n      dup3\n        /* \"challeng/my_contract/1.usdt-token.sol\":16476:16499  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"challeng/my_contract/1.usdt-token.sol\":16468:16539  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"challeng/my_contract/1.usdt-token.sol\":16568:16639  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_157\n        /* \"challeng/my_contract/1.usdt-token.sol\":16590:16596  amount */\n      dup2\n        /* \"challeng/my_contract/1.usdt-token.sol\":16568:16639  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"challeng/my_contract/1.usdt-token.sol\":16568:16577  _balances */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":16568:16585  _balances[sender] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":16578:16584  sender */\n      dup8\n        /* \"challeng/my_contract/1.usdt-token.sol\":16568:16585  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"challeng/my_contract/1.usdt-token.sol\":16568:16589  _balances[sender].sub */\n      tag_105\n      swap1\n        /* \"challeng/my_contract/1.usdt-token.sol\":16568:16639  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"challeng/my_contract/1.usdt-token.sol\":16548:16557  _balances */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":16548:16565  _balances[sender] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":16558:16564  sender */\n      dup6\n        /* \"challeng/my_contract/1.usdt-token.sol\":16548:16565  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"challeng/my_contract/1.usdt-token.sol\":16548:16639  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":16669:16701  _balances[recipient].add(amount) */\n      tag_158\n        /* \"challeng/my_contract/1.usdt-token.sol\":16694:16700  amount */\n      dup2\n        /* \"challeng/my_contract/1.usdt-token.sol\":16669:16678  _balances */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":16669:16689  _balances[recipient] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":16679:16688  recipient */\n      dup6\n        /* \"challeng/my_contract/1.usdt-token.sol\":16669:16689  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"challeng/my_contract/1.usdt-token.sol\":16669:16693  _balances[recipient].add */\n      tag_112\n      swap1\n        /* \"challeng/my_contract/1.usdt-token.sol\":16669:16701  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"challeng/my_contract/1.usdt-token.sol\":16646:16655  _balances */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":16646:16666  _balances[recipient] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":16656:16665  recipient */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":16646:16666  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"challeng/my_contract/1.usdt-token.sol\":16646:16701  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":16730:16739  recipient */\n      dup2\n        /* \"challeng/my_contract/1.usdt-token.sol\":16713:16748  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":16722:16728  sender */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":16713:16748  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"challeng/my_contract/1.usdt-token.sol\":16741:16747  amount */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":16713:16748  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"challeng/my_contract/1.usdt-token.sol\":16305:16754  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":5733:5911  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_105:\n        /* \"challeng/my_contract/1.usdt-token.sol\":5819:5826  uint256 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":5848:5849  a */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":5843:5844  b */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":5843:5849  b <= a */\n      gt\n      iszero\n        /* \"challeng/my_contract/1.usdt-token.sol\":5851:5863  errorMessage */\n      dup3\n        /* \"challeng/my_contract/1.usdt-token.sol\":5835:5864  require(b <= a, errorMessage) */\n      swap1\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_161:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_161)\n    tag_163:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":5835:5864  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_164:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":5871:5880  uint256 c */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":5887:5888  b */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":5883:5884  a */\n      dup6\n        /* \"challeng/my_contract/1.usdt-token.sol\":5883:5888  a - b */\n      sub\n        /* \"challeng/my_contract/1.usdt-token.sol\":5871:5888  uint256 c = a - b */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":5904:5905  c */\n      dup1\n        /* \"challeng/my_contract/1.usdt-token.sol\":5897:5905  return c */\n      swap2\n      pop\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":5733:5911  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":4906:5073  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_112:\n        /* \"challeng/my_contract/1.usdt-token.sol\":4964:4971  uint256 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":4980:4989  uint256 c */\n      dup1\n        /* \"challeng/my_contract/1.usdt-token.sol\":4996:4997  b */\n      dup3\n        /* \"challeng/my_contract/1.usdt-token.sol\":4992:4993  a */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":4992:4997  a + b */\n      add\n        /* \"challeng/my_contract/1.usdt-token.sol\":4980:4997  uint256 c = a + b */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":5017:5018  a */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":5012:5013  c */\n      dup2\n        /* \"challeng/my_contract/1.usdt-token.sol\":5012:5018  c >= a */\n      lt\n      iszero\n        /* \"challeng/my_contract/1.usdt-token.sol\":5004:5050  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"challeng/my_contract/1.usdt-token.sol\":5066:5067  c */\n      dup1\n        /* \"challeng/my_contract/1.usdt-token.sol\":5059:5067  return c */\n      swap2\n      pop\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":4906:5073  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":17062:17392  function _burn(address account, uint256 amount) internal {\r... */\n    tag_116:\n        /* \"challeng/my_contract/1.usdt-token.sol\":17153:17154  0 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":17134:17155  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":17134:17141  account */\n      dup3\n        /* \"challeng/my_contract/1.usdt-token.sol\":17134:17155  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"challeng/my_contract/1.usdt-token.sol\":17126:17193  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"challeng/my_contract/1.usdt-token.sol\":17223:17291  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_169\n        /* \"challeng/my_contract/1.usdt-token.sol\":17246:17252  amount */\n      dup2\n        /* \"challeng/my_contract/1.usdt-token.sol\":17223:17291  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"challeng/my_contract/1.usdt-token.sol\":17223:17232  _balances */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":17223:17241  _balances[account] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":17233:17240  account */\n      dup7\n        /* \"challeng/my_contract/1.usdt-token.sol\":17223:17241  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"challeng/my_contract/1.usdt-token.sol\":17223:17245  _balances[account].sub */\n      tag_105\n      swap1\n        /* \"challeng/my_contract/1.usdt-token.sol\":17223:17291  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"challeng/my_contract/1.usdt-token.sol\":17202:17211  _balances */\n      0x01\n        /* \"challeng/my_contract/1.usdt-token.sol\":17202:17220  _balances[account] */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":17212:17219  account */\n      dup5\n        /* \"challeng/my_contract/1.usdt-token.sol\":17202:17220  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"challeng/my_contract/1.usdt-token.sol\":17202:17291  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":17313:17337  _totalSupply.sub(amount) */\n      tag_170\n        /* \"challeng/my_contract/1.usdt-token.sol\":17330:17336  amount */\n      dup2\n        /* \"challeng/my_contract/1.usdt-token.sol\":17313:17325  _totalSupply */\n      sload(0x03)\n        /* \"challeng/my_contract/1.usdt-token.sol\":17313:17329  _totalSupply.sub */\n      tag_171\n      swap1\n        /* \"challeng/my_contract/1.usdt-token.sol\":17313:17337  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"challeng/my_contract/1.usdt-token.sol\":17298:17310  _totalSupply */\n      0x03\n        /* \"challeng/my_contract/1.usdt-token.sol\":17298:17337  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":17375:17376  0 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":17349:17386  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":17358:17365  account */\n      dup3\n        /* \"challeng/my_contract/1.usdt-token.sol\":17349:17386  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"challeng/my_contract/1.usdt-token.sol\":17379:17385  amount */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":17349:17386  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"challeng/my_contract/1.usdt-token.sol\":17062:17392  function _burn(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":11155:11370  function _transferOwnership(address newOwner) internal {\r... */\n    tag_149:\n        /* \"challeng/my_contract/1.usdt-token.sol\":11245:11246  0 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":11225:11247  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":11225:11233  newOwner */\n      dup2\n        /* \"challeng/my_contract/1.usdt-token.sol\":11225:11247  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"challeng/my_contract/1.usdt-token.sol\":11217:11290  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"challeng/my_contract/1.usdt-token.sol\":11331:11339  newOwner */\n      dup1\n        /* \"challeng/my_contract/1.usdt-token.sol\":11302:11340  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":11323:11329  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"challeng/my_contract/1.usdt-token.sol\":11302:11340  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"challeng/my_contract/1.usdt-token.sol\":11356:11364  newOwner */\n      dup1\n        /* \"challeng/my_contract/1.usdt-token.sol\":11347:11353  _owner */\n      0x00\n      dup1\n        /* \"challeng/my_contract/1.usdt-token.sol\":11347:11364  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":11155:11370  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"challeng/my_contract/1.usdt-token.sol\":5328:5458  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_171:\n        /* \"challeng/my_contract/1.usdt-token.sol\":5386:5393  uint256 */\n      0x00\n        /* \"challeng/my_contract/1.usdt-token.sol\":5409:5452  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_175\n        /* \"challeng/my_contract/1.usdt-token.sol\":5413:5414  a */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":5416:5417  b */\n      dup4\n        /* \"challeng/my_contract/1.usdt-token.sol\":5409:5452  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":5409:5412  sub */\n      tag_105\n        /* \"challeng/my_contract/1.usdt-token.sol\":5409:5452  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_175:\n        /* \"challeng/my_contract/1.usdt-token.sol\":5402:5452  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"challeng/my_contract/1.usdt-token.sol\":5328:5458  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820dc3aafed7dd4282e4df985805494b235db2083013a78a7c9d8301f4b70ac5d7e64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600a81526020017f5453757065724368616c00000000000000000000000000000000000000000000815250600690805190602001906200010f92919062000248565b506040518060400160405280600581526020017f544368616c000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000248565b506012600460006101000a81548160ff021916908360ff1602179055506a115eec47f6cf7e35000000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f7565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b620002f491905b80821115620002f0576000816000905550600101620002d6565b5090565b90565b611b6080620003076000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb14610586578063b09f1266146105ec578063d28d88521461066f578063dd62ed3e146106f2578063f2fde38b1461076a57610121565b8063715018a6146103ff578063893d20e8146104095780638da5cb5b1461045357806395d89b411461049d578063a457c2d71461052057610121565b8063313ce567116100f4578063313ce567146102b357806332424aa3146102d757806339509351146102fb57806342966c681461036157806370a08231146103a757610121565b806306fdde0314610126578063095ea7b3146101a957806318160ddd1461020f57806323b872dd1461022d575b600080fd5b61012e6107ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016e578082015181840152602081019050610153565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610850565b604051808215151515815260200191505060405180910390f35b61021761086e565b6040518082815260200191505060405180910390f35b6102996004803603606081101561024357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610878565b604051808215151515815260200191505060405180910390f35b6102bb610951565b604051808260ff1660ff16815260200191505060405180910390f35b6102df610968565b604051808260ff1660ff16815260200191505060405180910390f35b6103476004803603604081101561031157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061097b565b604051808215151515815260200191505060405180910390f35b61038d6004803603602081101561037757600080fd5b8101908080359060200190929190505050610a2e565b604051808215151515815260200191505060405180910390f35b6103e9600480360360208110156103bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4a565b6040518082815260200191505060405180910390f35b610407610a93565b005b610411610c1b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61045b610c2a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a5610c53565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104e55780820151818401526020810190506104ca565b50505050905090810190601f1680156105125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61056c6004803603604081101561053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cf5565b604051808215151515815260200191505060405180910390f35b6105d26004803603604081101561059c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dc2565b604051808215151515815260200191505060405180910390f35b6105f4610de0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610634578082015181840152602081019050610619565b50505050905090810190601f1680156106615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610677610e7e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106b757808201518184015260208101905061069c565b50505050905090810190601f1680156106e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107546004803603604081101561070857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f1c565b6040518082815260200191505060405180910390f35b6107ac6004803603602081101561078057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fa3565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108465780601f1061081b57610100808354040283529160200191610846565b820191906000526020600020905b81548152906001019060200180831161082957829003601f168201915b5050505050905090565b600061086461085d611078565b8484611080565b6001905092915050565b6000600354905090565b6000610885848484611277565b61094684610891611078565b61094185604051806060016040528060288152602001611a3160289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108f7611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b611080565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a24610988611078565b84610a1f8560026000610999611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f190919063ffffffff16565b611080565b6001905092915050565b6000610a41610a3b611078565b83611679565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a9b611078565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c25610c2a565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b5050505050905090565b6000610db8610d02611078565b84610db385604051806060016040528060258152602001611aa26025913960026000610d2c611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b611080565b6001905092915050565b6000610dd6610dcf611078565b8484611277565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e765780601f10610e4b57610100808354040283529160200191610e76565b820191906000526020600020905b815481529060010190602001808311610e5957829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f145780601f10610ee957610100808354040283529160200191610f14565b820191906000526020600020905b815481529060010190602001808311610ef757829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610fab611078565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461106c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61107581611833565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806119e76024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561118c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611b0a6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806119c26025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611383576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611a7f6023913960400191505060405180910390fd5b6113ef81604051806060016040528060268152602001611a5960269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061148481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906115de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115a3578082015181840152602081019050611588565b50505050905090810190601f1680156115d05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561166f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611ac76021913960400191505060405180910390fd5b61176b81604051806060016040528060228152602001611ae860229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117c38160035461197790919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611a0b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006119b983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611531565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820dc3aafed7dd4282e4df985805494b235db2083013a78a7c9d8301f4b70ac5d7e64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x240 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5453757065724368616C00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544368616C000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x115EEC47F6CF7E35000000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x28B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CB SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B60 DUP1 PUSH3 0x307 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x76A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x520 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A7 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x153 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH2 0xA93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x411 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4CA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x512 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x634 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x619 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x661 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x677 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x69C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6E4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x754 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFA3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x846 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x846 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x829 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x864 PUSH2 0x85D PUSH2 0x1078 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 DUP5 DUP5 DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x946 DUP5 PUSH2 0x891 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x941 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A31 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x8F7 PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA24 PUSH2 0x988 PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0xA1F DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x999 PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA41 PUSH2 0xA3B PUSH2 0x1078 JUMP JUMPDEST DUP4 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC25 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB8 PUSH2 0xD02 PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0xDB3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA2 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xD2C PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD6 PUSH2 0xDCF PUSH2 0x1078 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xE76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xF14 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEE9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF14 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEF7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFAB PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP2 PUSH2 0x1833 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19E7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B0A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19C2 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1383 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A7F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13EF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A59 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1484 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1588 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15D0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x166F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AC7 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x176B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x17C3 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1977 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A0B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B9 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820DC3AAFED7DD428 0x2E 0x4D 0xF9 DUP6 DUP1 SLOAD SWAP5 0xB2 CALLDATALOAD 0xDB KECCAK256 DUP4 ADD GASPRICE PUSH25 0xA7C9D8301F4B70AC5D7E64736F6C6343000510003200000000 ",
							"sourceMap": "11377:6755:0:-;;;11703:250;8:9:-1;5:2;;;30:1;27;20:12;5:2;11703:250:0;9886:17;9906:12;:10;;;:12;;:::i;:::-;9886:32;;9934:9;9925:6;;:18;;;;;;;;;;;;;;;;;;9988:9;9955:43;;9984:1;9955:43;;;;;;;;;;;;9855:149;11731:20;;;;;;;;;;;;;;;;;:5;:20;;;;;;;;;;;;:::i;:::-;;11758:17;;;;;;;;;;;;;;;;;:7;:17;;;;;;;;;;;;:::i;:::-;;11794:2;11782:9;;:14;;;;;;;;;;;;;;;;;;11818:26;11803:12;:41;;;;11875:12;;11851:9;:21;11861:10;11851:21;;;;;;;;;;;;;;;:36;;;;11922:10;11901:46;;11918:1;11901:46;;;11934:12;;11901:46;;;;;;;;;;;;;;;;;;11377:6755;;3774:92;3819:15;3850:10;3843:17;;3774:92;:::o;11377:6755::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb14610586578063b09f1266146105ec578063d28d88521461066f578063dd62ed3e146106f2578063f2fde38b1461076a57610121565b8063715018a6146103ff578063893d20e8146104095780638da5cb5b1461045357806395d89b411461049d578063a457c2d71461052057610121565b8063313ce567116100f4578063313ce567146102b357806332424aa3146102d757806339509351146102fb57806342966c681461036157806370a08231146103a757610121565b806306fdde0314610126578063095ea7b3146101a957806318160ddd1461020f57806323b872dd1461022d575b600080fd5b61012e6107ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016e578082015181840152602081019050610153565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610850565b604051808215151515815260200191505060405180910390f35b61021761086e565b6040518082815260200191505060405180910390f35b6102996004803603606081101561024357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610878565b604051808215151515815260200191505060405180910390f35b6102bb610951565b604051808260ff1660ff16815260200191505060405180910390f35b6102df610968565b604051808260ff1660ff16815260200191505060405180910390f35b6103476004803603604081101561031157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061097b565b604051808215151515815260200191505060405180910390f35b61038d6004803603602081101561037757600080fd5b8101908080359060200190929190505050610a2e565b604051808215151515815260200191505060405180910390f35b6103e9600480360360208110156103bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4a565b6040518082815260200191505060405180910390f35b610407610a93565b005b610411610c1b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61045b610c2a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a5610c53565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104e55780820151818401526020810190506104ca565b50505050905090810190601f1680156105125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61056c6004803603604081101561053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cf5565b604051808215151515815260200191505060405180910390f35b6105d26004803603604081101561059c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dc2565b604051808215151515815260200191505060405180910390f35b6105f4610de0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610634578082015181840152602081019050610619565b50505050905090810190601f1680156106615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610677610e7e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106b757808201518184015260208101905061069c565b50505050905090810190601f1680156106e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107546004803603604081101561070857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f1c565b6040518082815260200191505060405180910390f35b6107ac6004803603602081101561078057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fa3565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108465780601f1061081b57610100808354040283529160200191610846565b820191906000526020600020905b81548152906001019060200180831161082957829003601f168201915b5050505050905090565b600061086461085d611078565b8484611080565b6001905092915050565b6000600354905090565b6000610885848484611277565b61094684610891611078565b61094185604051806060016040528060288152602001611a3160289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108f7611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b611080565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a24610988611078565b84610a1f8560026000610999611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f190919063ffffffff16565b611080565b6001905092915050565b6000610a41610a3b611078565b83611679565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a9b611078565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c25610c2a565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b5050505050905090565b6000610db8610d02611078565b84610db385604051806060016040528060258152602001611aa26025913960026000610d2c611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b611080565b6001905092915050565b6000610dd6610dcf611078565b8484611277565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e765780601f10610e4b57610100808354040283529160200191610e76565b820191906000526020600020905b815481529060010190602001808311610e5957829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f145780601f10610ee957610100808354040283529160200191610f14565b820191906000526020600020905b815481529060010190602001808311610ef757829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610fab611078565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461106c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61107581611833565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806119e76024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561118c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611b0a6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806119c26025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611383576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611a7f6023913960400191505060405180910390fd5b6113ef81604051806060016040528060268152602001611a5960269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061148481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906115de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115a3578082015181840152602081019050611588565b50505050905090810190601f1680156115d05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561166f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611ac76021913960400191505060405180910390fd5b61176b81604051806060016040528060228152602001611ae860229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117c38160035461197790919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611a0b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006119b983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611531565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820dc3aafed7dd4282e4df985805494b235db2083013a78a7c9d8301f4b70ac5d7e64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x76A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x520 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A7 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x153 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH2 0xA93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x411 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4CA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x512 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x634 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x619 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x661 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x677 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x69C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6E4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x754 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFA3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x846 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x846 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x829 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x864 PUSH2 0x85D PUSH2 0x1078 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 DUP5 DUP5 DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x946 DUP5 PUSH2 0x891 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x941 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A31 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x8F7 PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA24 PUSH2 0x988 PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0xA1F DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x999 PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA41 PUSH2 0xA3B PUSH2 0x1078 JUMP JUMPDEST DUP4 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC25 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB8 PUSH2 0xD02 PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0xDB3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA2 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xD2C PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD6 PUSH2 0xDCF PUSH2 0x1078 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xE76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xF14 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEE9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF14 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEF7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFAB PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP2 PUSH2 0x1833 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19E7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B0A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19C2 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1383 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A7F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13EF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A59 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1484 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1588 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15D0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x166F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AC7 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x176B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x17C3 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1977 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A0B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B9 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820DC3AAFED7DD428 0x2E 0x4D 0xF9 DUP6 DUP1 SLOAD SWAP5 0xB2 CALLDATALOAD 0xDB KECCAK256 DUP4 ADD GASPRICE PUSH25 0xA7C9D8301F4B70AC5D7E64736F6C6343000510003200000000 ",
							"sourceMap": "11377:6755:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11377:6755:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12423:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12423:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13463:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13463:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12558:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14052:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14052:292:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12151:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11624:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14726:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14726:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15735:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15735:110:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12699:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12699:106:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10679:130;;;:::i;:::-;;12013:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10077:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12287:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12287:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15398:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15398:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12999:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12999:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11651:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11651:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11677:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11677:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13203:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13203:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10954:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10954:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;12423:79;12462:13;12491:5;12484:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12423:79;:::o;13463:144::-;13531:4;13544:39;13553:12;:10;:12::i;:::-;13567:7;13576:6;13544:8;:39::i;:::-;13597:4;13590:11;;13463:144;;;;:::o;12558:87::-;12604:7;12627:12;;12620:19;;12558:87;:::o;14052:292::-;14143:4;14156:36;14166:6;14174:9;14185:6;14156:9;:36::i;:::-;14199:121;14208:6;14216:12;:10;:12::i;:::-;14230:89;14268:6;14230:89;;;;;;;;;;;;;;;;;:11;:19;14242:6;14230:19;;;;;;;;;;;;;;;:33;14250:12;:10;:12::i;:::-;14230:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;14199:8;:121::i;:::-;14334:4;14327:11;;14052:292;;;;;:::o;12151:79::-;12194:5;12215:9;;;;;;;;;;;12208:16;;12151:79;:::o;11624:22::-;;;;;;;;;;;;;:::o;14726:200::-;14806:4;14819:83;14828:12;:10;:12::i;:::-;14842:7;14851:50;14890:10;14851:11;:25;14863:12;:10;:12::i;:::-;14851:25;;;;;;;;;;;;;;;:34;14877:7;14851:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14819:8;:83::i;:::-;14916:4;14909:11;;14726:200;;;;:::o;15735:110::-;15781:4;15794:27;15800:12;:10;:12::i;:::-;15814:6;15794:5;:27::i;:::-;15835:4;15828:11;;15735:110;;;:::o;12699:106::-;12758:7;12781:9;:18;12791:7;12781:18;;;;;;;;;;;;;;;;12774:25;;12699:106;;;:::o;10679:130::-;10281:12;:10;:12::i;:::-;10271:22;;:6;;;;;;;;;;;:22;;;10263:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10774:1;10737:40;;10758:6;;;;;;;;;;;10737:40;;;;;;;;;;;;10801:1;10784:6;;:19;;;;;;;;;;;;;;;;;;10679:130::o;12013:79::-;12056:7;12079;:5;:7::i;:::-;12072:14;;12013:79;:::o;10077:73::-;10115:7;10138:6;;;;;;;;;;;10131:13;;10077:73;:::o;12287:83::-;12328:13;12357:7;12350:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12287:83;:::o;15398:251::-;15483:4;15496:129;15505:12;:10;:12::i;:::-;15519:7;15528:96;15567:15;15528:96;;;;;;;;;;;;;;;;;:11;:25;15540:12;:10;:12::i;:::-;15528:25;;;;;;;;;;;;;;;:34;15554:7;15528:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;15496:8;:129::i;:::-;15639:4;15632:11;;15398:251;;;;:::o;12999:150::-;13070:4;13083:42;13093:12;:10;:12::i;:::-;13107:9;13118:6;13083:9;:42::i;:::-;13139:4;13132:11;;12999:150;;;;:::o;11651:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11677:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13203:130::-;13277:7;13300:11;:18;13312:5;13300:18;;;;;;;;;;;;;;;:27;13319:7;13300:27;;;;;;;;;;;;;;;;13293:34;;13203:130;;;;:::o;10954:103::-;10281:12;:10;:12::i;:::-;10271:22;;:6;;;;;;;;;;;:22;;;10263:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11023:28;11042:8;11023:18;:28::i;:::-;10954:103;:::o;3774:92::-;3819:15;3850:10;3843:17;;3774:92;:::o;17809:320::-;17916:1;17899:19;;:5;:19;;;;17891:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17993:1;17974:21;;:7;:21;;;;17966:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18073:6;18043:11;:18;18055:5;18043:18;;;;;;;;;;;;;;;:27;18062:7;18043:27;;;;;;;;;;;;;;;:36;;;;18107:7;18091:32;;18100:5;18091:32;;;18116:6;18091:32;;;;;;;;;;;;;;;;;;17809:320;;;:::o;16305:449::-;16417:1;16399:20;;:6;:20;;;;16391:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16497:1;16476:23;;:9;:23;;;;16468:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16568;16590:6;16568:71;;;;;;;;;;;;;;;;;:9;:17;16578:6;16568:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16548:9;:17;16558:6;16548:17;;;;;;;;;;;;;;;:91;;;;16669:32;16694:6;16669:9;:20;16679:9;16669:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16646:9;:20;16656:9;16646:20;;;;;;;;;;;;;;;:55;;;;16730:9;16713:35;;16722:6;16713:35;;;16741:6;16713:35;;;;;;;;;;;;;;;;;;16305:449;;;:::o;5733:178::-;5819:7;5848:1;5843;:6;;5851:12;5835:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5835:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5871:9;5887:1;5883;:5;5871:17;;5904:1;5897:8;;;5733:178;;;;;:::o;4906:167::-;4964:7;4980:9;4996:1;4992;:5;4980:17;;5017:1;5012;:6;;5004:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5066:1;5059:8;;;4906:167;;;;:::o;17062:330::-;17153:1;17134:21;;:7;:21;;;;17126:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17223:68;17246:6;17223:68;;;;;;;;;;;;;;;;;:9;:18;17233:7;17223:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;17202:9;:18;17212:7;17202:18;;;;;;;;;;;;;;;:89;;;;17313:24;17330:6;17313:12;;:16;;:24;;;;:::i;:::-;17298:12;:39;;;;17375:1;17349:37;;17358:7;17349:37;;;17379:6;17349:37;;;;;;;;;;;;;;;;;;17062:330;;:::o;11155:215::-;11245:1;11225:22;;:8;:22;;;;11217:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11331:8;11302:38;;11323:6;;;;;;;;;;;11302:38;;;;;;;;;;;;11356:8;11347:6;;:17;;;;;;;;;;;;;;;;;;11155:215;:::o;5328:130::-;5386:7;5409:43;5413:1;5416;5409:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;5402:50;;5328:130;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1401600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1098",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1307",
								"burn(uint256)": "infinite",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1141",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1128",
								"renounceOwnership()": "24320",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "MSTORE"
								},
								{
									"begin": 11703,
									"end": 11953,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 11703,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 9886,
									"end": 9903,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9906,
									"end": 9916,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9906,
									"end": 9916,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9906,
									"end": 9916,
									"name": "SHL"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "SHR"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9906,
									"end": 9918,
									"name": "JUMPDEST"
								},
								{
									"begin": 9886,
									"end": 9918,
									"name": "SWAP1"
								},
								{
									"begin": 9886,
									"end": 9918,
									"name": "POP"
								},
								{
									"begin": 9934,
									"end": 9943,
									"name": "DUP1"
								},
								{
									"begin": 9925,
									"end": 9931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9925,
									"end": 9931,
									"name": "DUP1"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "EXP"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "DUP2"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "SLOAD"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "DUP2"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "MUL"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "NOT"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "AND"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "SWAP1"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "DUP4"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "AND"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "MUL"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "OR"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "SWAP1"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "SSTORE"
								},
								{
									"begin": 9925,
									"end": 9943,
									"name": "POP"
								},
								{
									"begin": 9988,
									"end": 9997,
									"name": "DUP1"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "AND"
								},
								{
									"begin": 9984,
									"end": 9985,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "AND"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "MLOAD"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "MLOAD"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "DUP1"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "SWAP2"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "SUB"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "SWAP1"
								},
								{
									"begin": 9955,
									"end": 9998,
									"name": "LOG3"
								},
								{
									"begin": 9855,
									"end": 10004,
									"name": "POP"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "MLOAD"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "DUP1"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "ADD"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "MSTORE"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "DUP1"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "DUP2"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "MSTORE"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "ADD"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "PUSH",
									"value": "5453757065724368616C00000000000000000000000000000000000000000000"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "DUP2"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "MSTORE"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "POP"
								},
								{
									"begin": 11731,
									"end": 11736,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "SWAP1"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "DUP1"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "MLOAD"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "SWAP1"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "ADD"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "SWAP1"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "SWAP3"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "SWAP2"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "SWAP1"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "JUMPDEST"
								},
								{
									"begin": 11731,
									"end": 11751,
									"name": "POP"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "MLOAD"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "DUP1"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "ADD"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "MSTORE"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "DUP1"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "DUP2"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "MSTORE"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "ADD"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "PUSH",
									"value": "544368616C000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "DUP2"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "MSTORE"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "POP"
								},
								{
									"begin": 11758,
									"end": 11765,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "SWAP1"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "DUP1"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "MLOAD"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "SWAP1"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "ADD"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "SWAP1"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "SWAP3"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "SWAP2"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "SWAP1"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "JUMPDEST"
								},
								{
									"begin": 11758,
									"end": 11775,
									"name": "POP"
								},
								{
									"begin": 11794,
									"end": 11796,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11782,
									"end": 11791,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11782,
									"end": 11791,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "EXP"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "DUP2"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "SLOAD"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "DUP2"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "MUL"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "NOT"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "AND"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "SWAP1"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "DUP4"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "AND"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "MUL"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "OR"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "SWAP1"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "SSTORE"
								},
								{
									"begin": 11782,
									"end": 11796,
									"name": "POP"
								},
								{
									"begin": 11818,
									"end": 11844,
									"name": "PUSH",
									"value": "115EEC47F6CF7E35000000"
								},
								{
									"begin": 11803,
									"end": 11815,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11803,
									"end": 11844,
									"name": "DUP2"
								},
								{
									"begin": 11803,
									"end": 11844,
									"name": "SWAP1"
								},
								{
									"begin": 11803,
									"end": 11844,
									"name": "SSTORE"
								},
								{
									"begin": 11803,
									"end": 11844,
									"name": "POP"
								},
								{
									"begin": 11875,
									"end": 11887,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11875,
									"end": 11887,
									"name": "SLOAD"
								},
								{
									"begin": 11851,
									"end": 11860,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11861,
									"end": 11871,
									"name": "CALLER"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "AND"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "AND"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "DUP2"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "MSTORE"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "ADD"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "SWAP1"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "DUP2"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "MSTORE"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "ADD"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "KECCAK256"
								},
								{
									"begin": 11851,
									"end": 11887,
									"name": "DUP2"
								},
								{
									"begin": 11851,
									"end": 11887,
									"name": "SWAP1"
								},
								{
									"begin": 11851,
									"end": 11887,
									"name": "SSTORE"
								},
								{
									"begin": 11851,
									"end": 11887,
									"name": "POP"
								},
								{
									"begin": 11922,
									"end": 11932,
									"name": "CALLER"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "AND"
								},
								{
									"begin": 11918,
									"end": 11919,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "AND"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11934,
									"end": 11946,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11934,
									"end": 11946,
									"name": "SLOAD"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "MLOAD"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "DUP1"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "DUP3"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "DUP2"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "MSTORE"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "ADD"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "SWAP2"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "POP"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "POP"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "MLOAD"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "DUP1"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "SWAP2"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "SUB"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "SWAP1"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "LOG3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMP"
								},
								{
									"begin": 3774,
									"end": 3866,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3774,
									"end": 3866,
									"name": "JUMPDEST"
								},
								{
									"begin": 3819,
									"end": 3834,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3850,
									"end": 3860,
									"name": "CALLER"
								},
								{
									"begin": 3843,
									"end": 3860,
									"name": "SWAP1"
								},
								{
									"begin": 3843,
									"end": 3860,
									"name": "POP"
								},
								{
									"begin": 3774,
									"end": 3866,
									"name": "SWAP1"
								},
								{
									"begin": 3774,
									"end": 3866,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SLOAD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "AND"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ISZERO"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "MUL"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SUB"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "AND"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DIV"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "MSTORE"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "KECCAK256"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DIV"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "LT"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPI"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "MLOAD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "NOT"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "AND"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP4"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "OR"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP6"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SSTORE"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMP"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP6"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SSTORE"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ISZERO"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPI"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "GT"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ISZERO"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPI"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "MLOAD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SSTORE"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMP"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP3"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "GT"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ISZERO"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPI"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP2"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SSTORE"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "ADD"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMP"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "POP"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMP"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "SWAP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "JUMPDEST"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "DUP1"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "CODECOPY"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11377,
									"end": 18132,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820dc3aafed7dd4282e4df985805494b235db2083013a78a7c9d8301f4b70ac5d7e64736f6c63430005100032",
									".code": [
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "MSTORE"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "POP"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "LT"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "SHR"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "GT"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "GT"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMP"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMP"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "GT"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMP"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "EQ"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPI"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "DUP1"
										},
										{
											"begin": 11377,
											"end": 18132,
											"name": "REVERT"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPDEST"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPDEST"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MSTORE"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP4"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MSTORE"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP4"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "AND"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ISZERO"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPI"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP4"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "EXP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "NOT"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "AND"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MSTORE"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPDEST"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "RETURN"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMPDEST"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ADD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "AND"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ADD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP3"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ADD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP3"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMPDEST"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "MLOAD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP3"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ISZERO"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ISZERO"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ISZERO"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ISZERO"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "MSTORE"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ADD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "MLOAD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SUB"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "RETURN"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "DUP3"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "DUP2"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "MSTORE"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SUB"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "RETURN"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMPDEST"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "AND"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "AND"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMPDEST"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "MLOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "MSTORE"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "MLOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SUB"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "RETURN"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMPDEST"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMPDEST"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "MLOAD"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "DUP1"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "DUP3"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "AND"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "AND"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "DUP2"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "MSTORE"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "ADD"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SWAP2"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "POP"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "POP"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "MLOAD"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "DUP1"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SWAP2"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SUB"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SWAP1"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "RETURN"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "JUMPDEST"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "JUMPDEST"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "MLOAD"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "DUP1"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "DUP3"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "AND"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "AND"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "DUP2"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "MSTORE"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "ADD"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "SWAP2"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "POP"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "POP"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "MLOAD"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "DUP1"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "SWAP2"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "SUB"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "SWAP1"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "RETURN"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMPDEST"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ADD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "AND"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ADD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP3"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ADD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP3"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMPDEST"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "MLOAD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP3"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ISZERO"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ISZERO"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ISZERO"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ISZERO"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "MSTORE"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ADD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "MLOAD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SUB"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "RETURN"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "JUMPDEST"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "DUP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "DUP2"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "ADD"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "DUP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "DUP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "ADD"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP3"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP2"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "POP"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "POP"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "POP"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "JUMPDEST"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "MLOAD"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "DUP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "DUP3"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "ISZERO"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "ISZERO"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "ISZERO"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "ISZERO"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "DUP2"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "MSTORE"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "ADD"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP2"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "POP"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "POP"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "MLOAD"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "DUP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP2"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SUB"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "RETURN"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMPDEST"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "ADD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "AND"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "ADD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP3"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMPDEST"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "MLOAD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP3"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "MSTORE"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "ADD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "MLOAD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SUB"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "RETURN"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMPDEST"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMPDEST"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "STOP"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMPDEST"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMPDEST"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "MLOAD"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "DUP1"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "DUP3"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "AND"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "AND"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "DUP2"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "MSTORE"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "ADD"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SWAP2"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "POP"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "POP"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "MLOAD"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "DUP1"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SWAP2"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SUB"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SWAP1"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "RETURN"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMPDEST"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMPDEST"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "MLOAD"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "DUP1"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "DUP3"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "AND"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "AND"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "DUP2"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "MSTORE"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "ADD"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SWAP2"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "POP"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "POP"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "MLOAD"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "DUP1"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SWAP2"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SUB"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SWAP1"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "RETURN"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPDEST"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPDEST"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP3"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP3"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MSTORE"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP4"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MSTORE"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP4"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "AND"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ISZERO"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPI"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP3"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP4"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "EXP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "NOT"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "AND"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MSTORE"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPDEST"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP3"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "RETURN"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMPDEST"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ADD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "AND"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ADD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP3"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ADD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP3"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMPDEST"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "MLOAD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP3"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ISZERO"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ISZERO"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ISZERO"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ISZERO"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "MSTORE"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ADD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "MLOAD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SUB"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "RETURN"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMPDEST"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "AND"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMPDEST"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "MLOAD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP3"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ISZERO"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ISZERO"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ISZERO"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ISZERO"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "MSTORE"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "MLOAD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SUB"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "RETURN"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP3"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SUB"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP3"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MSTORE"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP4"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MSTORE"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP4"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "AND"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ISZERO"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPI"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP3"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SUB"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP4"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SUB"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "EXP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SUB"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "NOT"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "AND"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MSTORE"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP3"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SUB"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "RETURN"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP3"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP3"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP4"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP4"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ISZERO"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPI"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP3"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP4"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "EXP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "NOT"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP3"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "RETURN"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMPDEST"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "ADD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "AND"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "ADD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP3"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "AND"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "ADD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP3"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMPDEST"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "MLOAD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP3"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "MSTORE"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "ADD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "MLOAD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SUB"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "RETURN"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "DUP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "DUP2"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "ADD"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "DUP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "DUP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "AND"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "ADD"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP3"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP2"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "SWAP1"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "POP"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "POP"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "POP"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "STOP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPDEST"
										},
										{
											"begin": 12462,
											"end": 12475,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12491,
											"end": 12496,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ISZERO"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SUB"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DIV"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DIV"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ISZERO"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SUB"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DIV"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ISZERO"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPI"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "LT"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPI"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP4"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DIV"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP4"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPDEST"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "KECCAK256"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPDEST"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP4"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "GT"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPI"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SUB"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPDEST"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMPDEST"
										},
										{
											"begin": 13531,
											"end": 13535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13544,
											"end": 13583,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 13553,
											"end": 13565,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 13553,
											"end": 13563,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13553,
											"end": 13565,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13553,
											"end": 13565,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 13553,
											"end": 13565,
											"name": "JUMPDEST"
										},
										{
											"begin": 13567,
											"end": 13574,
											"name": "DUP5"
										},
										{
											"begin": 13576,
											"end": 13582,
											"name": "DUP5"
										},
										{
											"begin": 13544,
											"end": 13552,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 13544,
											"end": 13583,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13544,
											"end": 13583,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 13544,
											"end": 13583,
											"name": "JUMPDEST"
										},
										{
											"begin": 13597,
											"end": 13601,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13590,
											"end": 13601,
											"name": "SWAP1"
										},
										{
											"begin": 13590,
											"end": 13601,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP3"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMPDEST"
										},
										{
											"begin": 12604,
											"end": 12611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12627,
											"end": 12639,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12627,
											"end": 12639,
											"name": "SLOAD"
										},
										{
											"begin": 12620,
											"end": 12639,
											"name": "SWAP1"
										},
										{
											"begin": 12620,
											"end": 12639,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMPDEST"
										},
										{
											"begin": 14143,
											"end": 14147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14156,
											"end": 14192,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14166,
											"end": 14172,
											"name": "DUP5"
										},
										{
											"begin": 14174,
											"end": 14183,
											"name": "DUP5"
										},
										{
											"begin": 14185,
											"end": 14191,
											"name": "DUP5"
										},
										{
											"begin": 14156,
											"end": 14165,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14156,
											"end": 14192,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14156,
											"end": 14192,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 14156,
											"end": 14192,
											"name": "JUMPDEST"
										},
										{
											"begin": 14199,
											"end": 14320,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 14208,
											"end": 14214,
											"name": "DUP5"
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 14216,
											"end": 14226,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "JUMPDEST"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 14268,
											"end": 14274,
											"name": "DUP6"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "MLOAD"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "DUP1"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "DUP1"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "SWAP2"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "CODECOPY"
										},
										{
											"begin": 14230,
											"end": 14241,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14242,
											"end": 14248,
											"name": "DUP12"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "SWAP1"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "KECCAK256"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "JUMPDEST"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "SWAP1"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "KECCAK256"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "SLOAD"
										},
										{
											"begin": 14230,
											"end": 14267,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 14230,
											"end": 14267,
											"name": "SWAP1"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "SWAP3"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "SWAP2"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "SWAP1"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "JUMPDEST"
										},
										{
											"begin": 14199,
											"end": 14207,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 14199,
											"end": 14320,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14199,
											"end": 14320,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 14199,
											"end": 14320,
											"name": "JUMPDEST"
										},
										{
											"begin": 14334,
											"end": 14338,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14327,
											"end": 14338,
											"name": "SWAP1"
										},
										{
											"begin": 14327,
											"end": 14338,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP4"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMPDEST"
										},
										{
											"begin": 12194,
											"end": 12199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "SLOAD"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "EXP"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "DIV"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "AND"
										},
										{
											"begin": 12208,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12208,
											"end": 12224,
											"name": "POP"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SWAP1"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "JUMPDEST"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "SWAP1"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "SLOAD"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "SWAP1"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "EXP"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "SWAP1"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "DIV"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "AND"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "DUP2"
										},
										{
											"begin": 11624,
											"end": 11646,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMPDEST"
										},
										{
											"begin": 14806,
											"end": 14810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14819,
											"end": 14902,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 14828,
											"end": 14840,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 14828,
											"end": 14838,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14828,
											"end": 14840,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14828,
											"end": 14840,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 14828,
											"end": 14840,
											"name": "JUMPDEST"
										},
										{
											"begin": 14842,
											"end": 14849,
											"name": "DUP5"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 14890,
											"end": 14900,
											"name": "DUP6"
										},
										{
											"begin": 14851,
											"end": 14862,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14875,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 14863,
											"end": 14873,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14863,
											"end": 14875,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14863,
											"end": 14875,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 14863,
											"end": 14875,
											"name": "JUMPDEST"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "DUP2"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "MSTORE"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "ADD"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "SWAP1"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "DUP2"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "MSTORE"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "ADD"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "KECCAK256"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14884,
											"name": "DUP10"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "DUP2"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "MSTORE"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "ADD"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "SWAP1"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "DUP2"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "MSTORE"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "ADD"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "KECCAK256"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "SLOAD"
										},
										{
											"begin": 14851,
											"end": 14889,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 14851,
											"end": 14889,
											"name": "SWAP1"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "SWAP2"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "SWAP1"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "JUMPDEST"
										},
										{
											"begin": 14819,
											"end": 14827,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 14819,
											"end": 14902,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14819,
											"end": 14902,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 14819,
											"end": 14902,
											"name": "JUMPDEST"
										},
										{
											"begin": 14916,
											"end": 14920,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14909,
											"end": 14920,
											"name": "SWAP1"
										},
										{
											"begin": 14909,
											"end": 14920,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP3"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "JUMPDEST"
										},
										{
											"begin": 15781,
											"end": 15785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15821,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 15800,
											"end": 15812,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 15800,
											"end": 15810,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15800,
											"end": 15812,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15800,
											"end": 15812,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 15800,
											"end": 15812,
											"name": "JUMPDEST"
										},
										{
											"begin": 15814,
											"end": 15820,
											"name": "DUP4"
										},
										{
											"begin": 15794,
											"end": 15799,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 15794,
											"end": 15821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15794,
											"end": 15821,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 15794,
											"end": 15821,
											"name": "JUMPDEST"
										},
										{
											"begin": 15835,
											"end": 15839,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15828,
											"end": 15839,
											"name": "SWAP1"
										},
										{
											"begin": 15828,
											"end": 15839,
											"name": "POP"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP2"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "SWAP1"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "POP"
										},
										{
											"begin": 15735,
											"end": 15845,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMPDEST"
										},
										{
											"begin": 12758,
											"end": 12765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12781,
											"end": 12790,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12791,
											"end": 12798,
											"name": "DUP4"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "AND"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "AND"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "DUP2"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "MSTORE"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "ADD"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "SWAP1"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "DUP2"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "MSTORE"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "ADD"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "KECCAK256"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "SLOAD"
										},
										{
											"begin": 12774,
											"end": 12799,
											"name": "SWAP1"
										},
										{
											"begin": 12774,
											"end": 12799,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMPDEST"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 10281,
											"end": 10291,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMPDEST"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DUP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SLOAD"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "EXP"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DIV"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "EQ"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPI"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "REVERT"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPDEST"
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "AND"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "DUP1"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "SWAP1"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "SLOAD"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "SWAP1"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "EXP"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "SWAP1"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "DIV"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10758,
											"end": 10764,
											"name": "AND"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "AND"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "MLOAD"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "MLOAD"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "DUP1"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "SWAP2"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "SUB"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "SWAP1"
										},
										{
											"begin": 10737,
											"end": 10777,
											"name": "LOG3"
										},
										{
											"begin": 10801,
											"end": 10802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10790,
											"name": "DUP1"
										},
										{
											"begin": 10784,
											"end": 10790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "EXP"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "DUP2"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "SLOAD"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "DUP2"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "MUL"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "NOT"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "AND"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "SWAP1"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "DUP4"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "AND"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "MUL"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "OR"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "SWAP1"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "SSTORE"
										},
										{
											"begin": 10784,
											"end": 10803,
											"name": "POP"
										},
										{
											"begin": 10679,
											"end": 10809,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMPDEST"
										},
										{
											"begin": 12056,
											"end": 12063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12079,
											"end": 12086,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 12079,
											"end": 12084,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 12079,
											"end": 12086,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12079,
											"end": 12086,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 12079,
											"end": 12086,
											"name": "JUMPDEST"
										},
										{
											"begin": 12072,
											"end": 12086,
											"name": "SWAP1"
										},
										{
											"begin": 12072,
											"end": 12086,
											"name": "POP"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SWAP1"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMPDEST"
										},
										{
											"begin": 10115,
											"end": 10122,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "SLOAD"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "EXP"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "DIV"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "AND"
										},
										{
											"begin": 10131,
											"end": 10144,
											"name": "SWAP1"
										},
										{
											"begin": 10131,
											"end": 10144,
											"name": "POP"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "SWAP1"
										},
										{
											"begin": 10077,
											"end": 10150,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPDEST"
										},
										{
											"begin": 12328,
											"end": 12341,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12357,
											"end": 12364,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ISZERO"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MUL"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SUB"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DIV"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DIV"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MUL"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ISZERO"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MUL"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SUB"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DIV"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ISZERO"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPI"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "LT"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPI"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP4"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DIV"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MUL"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP4"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPDEST"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "KECCAK256"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPDEST"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP4"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "GT"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPI"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SUB"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPDEST"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMPDEST"
										},
										{
											"begin": 15483,
											"end": 15487,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15496,
											"end": 15625,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 15505,
											"end": 15517,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 15505,
											"end": 15515,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15505,
											"end": 15517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15505,
											"end": 15517,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 15505,
											"end": 15517,
											"name": "JUMPDEST"
										},
										{
											"begin": 15519,
											"end": 15526,
											"name": "DUP5"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 15567,
											"end": 15582,
											"name": "DUP6"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "MLOAD"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "DUP1"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "DUP1"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "SWAP2"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "CODECOPY"
										},
										{
											"begin": 15528,
											"end": 15539,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15540,
											"end": 15552,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 15540,
											"end": 15550,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15540,
											"end": 15552,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15540,
											"end": 15552,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 15540,
											"end": 15552,
											"name": "JUMPDEST"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "SWAP1"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "KECCAK256"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15554,
											"end": 15561,
											"name": "DUP11"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "SWAP1"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "KECCAK256"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "SLOAD"
										},
										{
											"begin": 15528,
											"end": 15566,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 15528,
											"end": 15566,
											"name": "SWAP1"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "SWAP3"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "SWAP2"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "SWAP1"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "JUMPDEST"
										},
										{
											"begin": 15496,
											"end": 15504,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 15496,
											"end": 15625,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15496,
											"end": 15625,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 15496,
											"end": 15625,
											"name": "JUMPDEST"
										},
										{
											"begin": 15639,
											"end": 15643,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15632,
											"end": 15643,
											"name": "SWAP1"
										},
										{
											"begin": 15632,
											"end": 15643,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP3"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMPDEST"
										},
										{
											"begin": 13070,
											"end": 13074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13083,
											"end": 13125,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 13093,
											"end": 13103,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "JUMPDEST"
										},
										{
											"begin": 13107,
											"end": 13116,
											"name": "DUP5"
										},
										{
											"begin": 13118,
											"end": 13124,
											"name": "DUP5"
										},
										{
											"begin": 13083,
											"end": 13092,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13083,
											"end": 13125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13083,
											"end": 13125,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 13083,
											"end": 13125,
											"name": "JUMPDEST"
										},
										{
											"begin": 13139,
											"end": 13143,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13132,
											"end": 13143,
											"name": "SWAP1"
										},
										{
											"begin": 13132,
											"end": 13143,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "AND"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ISZERO"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MUL"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SUB"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "AND"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DIV"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DIV"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MUL"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MSTORE"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP3"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MSTORE"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP3"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "AND"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ISZERO"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MUL"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SUB"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "AND"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DIV"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ISZERO"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPI"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "LT"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPI"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP4"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DIV"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MUL"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP4"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MSTORE"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP3"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MSTORE"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "KECCAK256"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SLOAD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "MSTORE"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP4"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "GT"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPI"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP3"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP1"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SUB"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "AND"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP3"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "ADD"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "SWAP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMPDEST"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "POP"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "DUP2"
										},
										{
											"begin": 11651,
											"end": 11672,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ISZERO"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MUL"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DIV"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DIV"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MUL"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP3"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP3"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ISZERO"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MUL"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DIV"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ISZERO"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPI"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "LT"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPI"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP4"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DIV"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MUL"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP4"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP3"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "KECCAK256"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SLOAD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP4"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "GT"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPI"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP3"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP3"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMPDEST"
										},
										{
											"begin": 13277,
											"end": 13284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13311,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13317,
											"name": "DUP5"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "AND"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "AND"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "DUP2"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "MSTORE"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "ADD"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "SWAP1"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "DUP2"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "MSTORE"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "ADD"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "KECCAK256"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13319,
											"end": 13326,
											"name": "DUP4"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "AND"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "AND"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "DUP2"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "MSTORE"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "ADD"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "SWAP1"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "DUP2"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "MSTORE"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "ADD"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "KECCAK256"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "SLOAD"
										},
										{
											"begin": 13293,
											"end": 13327,
											"name": "SWAP1"
										},
										{
											"begin": 13293,
											"end": 13327,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP3"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 10281,
											"end": 10291,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 10281,
											"end": 10293,
											"name": "JUMPDEST"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DUP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SLOAD"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "EXP"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "SWAP1"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "DIV"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10277,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "AND"
										},
										{
											"begin": 10271,
											"end": 10293,
											"name": "EQ"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPI"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP3"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MSTORE"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "ADD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "POP"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "MLOAD"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "DUP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP2"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SUB"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "SWAP1"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "REVERT"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 10263,
											"end": 10330,
											"name": "JUMPDEST"
										},
										{
											"begin": 11023,
											"end": 11051,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11042,
											"end": 11050,
											"name": "DUP2"
										},
										{
											"begin": 11023,
											"end": 11041,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11023,
											"end": 11051,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11023,
											"end": 11051,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 11023,
											"end": 11051,
											"name": "JUMPDEST"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "POP"
										},
										{
											"begin": 10954,
											"end": 11057,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3774,
											"end": 3866,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3774,
											"end": 3866,
											"name": "JUMPDEST"
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3860,
											"name": "CALLER"
										},
										{
											"begin": 3843,
											"end": 3860,
											"name": "SWAP1"
										},
										{
											"begin": 3843,
											"end": 3860,
											"name": "POP"
										},
										{
											"begin": 3774,
											"end": 3866,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 3866,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17809,
											"end": 18129,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 17809,
											"end": 18129,
											"name": "JUMPDEST"
										},
										{
											"begin": 17916,
											"end": 17917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17899,
											"end": 17918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17899,
											"end": 17918,
											"name": "AND"
										},
										{
											"begin": 17899,
											"end": 17904,
											"name": "DUP4"
										},
										{
											"begin": 17899,
											"end": 17918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17899,
											"end": 17918,
											"name": "AND"
										},
										{
											"begin": 17899,
											"end": 17918,
											"name": "EQ"
										},
										{
											"begin": 17899,
											"end": 17918,
											"name": "ISZERO"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "JUMPI"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "MLOAD"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "DUP2"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "MSTORE"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "ADD"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "DUP1"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "DUP1"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "ADD"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "DUP3"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "DUP2"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "SUB"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "DUP3"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "MSTORE"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "DUP2"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "MSTORE"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "ADD"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "DUP1"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "SWAP2"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "CODECOPY"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "ADD"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "SWAP2"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "POP"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "POP"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "MLOAD"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "DUP1"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "SWAP2"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "SUB"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "SWAP1"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "REVERT"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 17891,
											"end": 17959,
											"name": "JUMPDEST"
										},
										{
											"begin": 17993,
											"end": 17994,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17974,
											"end": 17995,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17974,
											"end": 17995,
											"name": "AND"
										},
										{
											"begin": 17974,
											"end": 17981,
											"name": "DUP3"
										},
										{
											"begin": 17974,
											"end": 17995,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17974,
											"end": 17995,
											"name": "AND"
										},
										{
											"begin": 17974,
											"end": 17995,
											"name": "EQ"
										},
										{
											"begin": 17974,
											"end": 17995,
											"name": "ISZERO"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "JUMPI"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "MLOAD"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "DUP2"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "MSTORE"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "ADD"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "DUP1"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "DUP1"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "ADD"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "DUP3"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "DUP2"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "SUB"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "DUP3"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "MSTORE"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "DUP2"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "MSTORE"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "ADD"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "DUP1"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "SWAP2"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "CODECOPY"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "ADD"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "SWAP2"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "POP"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "POP"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "MLOAD"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "DUP1"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "SWAP2"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "SUB"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "SWAP1"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "REVERT"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 17966,
											"end": 18034,
											"name": "JUMPDEST"
										},
										{
											"begin": 18073,
											"end": 18079,
											"name": "DUP1"
										},
										{
											"begin": 18043,
											"end": 18054,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18055,
											"end": 18060,
											"name": "DUP6"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "AND"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "AND"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "DUP2"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "MSTORE"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "SWAP1"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "DUP2"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "MSTORE"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18043,
											"end": 18061,
											"name": "KECCAK256"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18062,
											"end": 18069,
											"name": "DUP5"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "AND"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "AND"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "DUP2"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "MSTORE"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "ADD"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "SWAP1"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "DUP2"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "MSTORE"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "ADD"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18043,
											"end": 18070,
											"name": "KECCAK256"
										},
										{
											"begin": 18043,
											"end": 18079,
											"name": "DUP2"
										},
										{
											"begin": 18043,
											"end": 18079,
											"name": "SWAP1"
										},
										{
											"begin": 18043,
											"end": 18079,
											"name": "SSTORE"
										},
										{
											"begin": 18043,
											"end": 18079,
											"name": "POP"
										},
										{
											"begin": 18107,
											"end": 18114,
											"name": "DUP2"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "AND"
										},
										{
											"begin": 18100,
											"end": 18105,
											"name": "DUP4"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "AND"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18116,
											"end": 18122,
											"name": "DUP4"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "MLOAD"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "DUP1"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "DUP3"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "DUP2"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "MSTORE"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "ADD"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "SWAP2"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "POP"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "POP"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "MLOAD"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "DUP1"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "SWAP2"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "SUB"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "SWAP1"
										},
										{
											"begin": 18091,
											"end": 18123,
											"name": "LOG3"
										},
										{
											"begin": 17809,
											"end": 18129,
											"name": "POP"
										},
										{
											"begin": 17809,
											"end": 18129,
											"name": "POP"
										},
										{
											"begin": 17809,
											"end": 18129,
											"name": "POP"
										},
										{
											"begin": 17809,
											"end": 18129,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16305,
											"end": 16754,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 16305,
											"end": 16754,
											"name": "JUMPDEST"
										},
										{
											"begin": 16417,
											"end": 16418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16399,
											"end": 16419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16399,
											"end": 16419,
											"name": "AND"
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "DUP4"
										},
										{
											"begin": 16399,
											"end": 16419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16399,
											"end": 16419,
											"name": "AND"
										},
										{
											"begin": 16399,
											"end": 16419,
											"name": "EQ"
										},
										{
											"begin": 16399,
											"end": 16419,
											"name": "ISZERO"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "JUMPI"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "MLOAD"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "DUP2"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "MSTORE"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "ADD"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "DUP1"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "DUP1"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "ADD"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "DUP3"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "DUP2"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "SUB"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "DUP3"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "MSTORE"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "DUP2"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "MSTORE"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "ADD"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "DUP1"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "SWAP2"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "CODECOPY"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "ADD"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "SWAP2"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "POP"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "POP"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "MLOAD"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "DUP1"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "SWAP2"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "SUB"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "SWAP1"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "REVERT"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 16391,
											"end": 16461,
											"name": "JUMPDEST"
										},
										{
											"begin": 16497,
											"end": 16498,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16476,
											"end": 16499,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16476,
											"end": 16499,
											"name": "AND"
										},
										{
											"begin": 16476,
											"end": 16485,
											"name": "DUP3"
										},
										{
											"begin": 16476,
											"end": 16499,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16476,
											"end": 16499,
											"name": "AND"
										},
										{
											"begin": 16476,
											"end": 16499,
											"name": "EQ"
										},
										{
											"begin": 16476,
											"end": 16499,
											"name": "ISZERO"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "JUMPI"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "MLOAD"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "DUP2"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "MSTORE"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "ADD"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "DUP1"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "DUP1"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "ADD"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "DUP3"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "DUP2"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "SUB"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "DUP3"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "MSTORE"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "DUP2"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "MSTORE"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "ADD"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "DUP1"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "SWAP2"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "CODECOPY"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "ADD"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "SWAP2"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "POP"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "POP"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "MLOAD"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "DUP1"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "SWAP2"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "SUB"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "SWAP1"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "REVERT"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 16468,
											"end": 16539,
											"name": "JUMPDEST"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 16590,
											"end": 16596,
											"name": "DUP2"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "MLOAD"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "DUP1"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "ADD"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "MSTORE"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "DUP1"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "DUP2"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "MSTORE"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "ADD"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "SWAP2"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "CODECOPY"
										},
										{
											"begin": 16568,
											"end": 16577,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16578,
											"end": 16584,
											"name": "DUP8"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "AND"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "AND"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "DUP2"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "MSTORE"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "ADD"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "SWAP1"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "DUP2"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "MSTORE"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "ADD"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "KECCAK256"
										},
										{
											"begin": 16568,
											"end": 16585,
											"name": "SLOAD"
										},
										{
											"begin": 16568,
											"end": 16589,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 16568,
											"end": 16589,
											"name": "SWAP1"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "SWAP3"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "SWAP2"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "SWAP1"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "AND"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 16568,
											"end": 16639,
											"name": "JUMPDEST"
										},
										{
											"begin": 16548,
											"end": 16557,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16558,
											"end": 16564,
											"name": "DUP6"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "AND"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "AND"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "DUP2"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "MSTORE"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "ADD"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "SWAP1"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "DUP2"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "MSTORE"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "ADD"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16548,
											"end": 16565,
											"name": "KECCAK256"
										},
										{
											"begin": 16548,
											"end": 16639,
											"name": "DUP2"
										},
										{
											"begin": 16548,
											"end": 16639,
											"name": "SWAP1"
										},
										{
											"begin": 16548,
											"end": 16639,
											"name": "SSTORE"
										},
										{
											"begin": 16548,
											"end": 16639,
											"name": "POP"
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 16694,
											"end": 16700,
											"name": "DUP2"
										},
										{
											"begin": 16669,
											"end": 16678,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16679,
											"end": 16688,
											"name": "DUP6"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "AND"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "AND"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "DUP2"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "MSTORE"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "ADD"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "SWAP1"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "DUP2"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "MSTORE"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "ADD"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "KECCAK256"
										},
										{
											"begin": 16669,
											"end": 16689,
											"name": "SLOAD"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 16669,
											"end": 16693,
											"name": "SWAP1"
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "SWAP2"
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "SWAP1"
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "AND"
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 16669,
											"end": 16701,
											"name": "JUMPDEST"
										},
										{
											"begin": 16646,
											"end": 16655,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16656,
											"end": 16665,
											"name": "DUP5"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "AND"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "AND"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "DUP2"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "MSTORE"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "ADD"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "SWAP1"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "DUP2"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "MSTORE"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "ADD"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "KECCAK256"
										},
										{
											"begin": 16646,
											"end": 16701,
											"name": "DUP2"
										},
										{
											"begin": 16646,
											"end": 16701,
											"name": "SWAP1"
										},
										{
											"begin": 16646,
											"end": 16701,
											"name": "SSTORE"
										},
										{
											"begin": 16646,
											"end": 16701,
											"name": "POP"
										},
										{
											"begin": 16730,
											"end": 16739,
											"name": "DUP2"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "AND"
										},
										{
											"begin": 16722,
											"end": 16728,
											"name": "DUP4"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "AND"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16741,
											"end": 16747,
											"name": "DUP4"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "MLOAD"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "DUP1"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "DUP3"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "DUP2"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "MSTORE"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "ADD"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "SWAP2"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "POP"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "POP"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "MLOAD"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "DUP1"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "SWAP2"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "SUB"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "SWAP1"
										},
										{
											"begin": 16713,
											"end": 16748,
											"name": "LOG3"
										},
										{
											"begin": 16305,
											"end": 16754,
											"name": "POP"
										},
										{
											"begin": 16305,
											"end": 16754,
											"name": "POP"
										},
										{
											"begin": 16305,
											"end": 16754,
											"name": "POP"
										},
										{
											"begin": 16305,
											"end": 16754,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "JUMPDEST"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "DUP4"
										},
										{
											"begin": 5843,
											"end": 5844,
											"name": "DUP4"
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "GT"
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "ISZERO"
										},
										{
											"begin": 5851,
											"end": 5863,
											"name": "DUP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "JUMPI"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MSTORE"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MSTORE"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP4"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MSTORE"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP4"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "AND"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ISZERO"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "JUMPI"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP4"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "EXP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "NOT"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "AND"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MSTORE"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "ADD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "JUMPDEST"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP3"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "MLOAD"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "DUP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP2"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SUB"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "SWAP1"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "REVERT"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "JUMPDEST"
										},
										{
											"begin": 5835,
											"end": 5864,
											"name": "POP"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "DUP4"
										},
										{
											"begin": 5883,
											"end": 5884,
											"name": "DUP6"
										},
										{
											"begin": 5883,
											"end": 5888,
											"name": "SUB"
										},
										{
											"begin": 5871,
											"end": 5888,
											"name": "SWAP1"
										},
										{
											"begin": 5871,
											"end": 5888,
											"name": "POP"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "DUP1"
										},
										{
											"begin": 5897,
											"end": 5905,
											"name": "SWAP2"
										},
										{
											"begin": 5897,
											"end": 5905,
											"name": "POP"
										},
										{
											"begin": 5897,
											"end": 5905,
											"name": "POP"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "SWAP4"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "SWAP3"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "POP"
										},
										{
											"begin": 5733,
											"end": 5911,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "JUMPDEST"
										},
										{
											"begin": 4964,
											"end": 4971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 4989,
											"name": "DUP1"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP3"
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "DUP5"
										},
										{
											"begin": 4992,
											"end": 4997,
											"name": "ADD"
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "SWAP1"
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "POP"
										},
										{
											"begin": 5017,
											"end": 5018,
											"name": "DUP4"
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "DUP2"
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "LT"
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "ISZERO"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "JUMPI"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MLOAD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MSTORE"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP3"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SUB"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP3"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MSTORE"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MSTORE"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MSTORE"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "ADD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SWAP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "POP"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "MLOAD"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "DUP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SWAP2"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SUB"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "SWAP1"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "REVERT"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 5004,
											"end": 5050,
											"name": "JUMPDEST"
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "DUP1"
										},
										{
											"begin": 5059,
											"end": 5067,
											"name": "SWAP2"
										},
										{
											"begin": 5059,
											"end": 5067,
											"name": "POP"
										},
										{
											"begin": 5059,
											"end": 5067,
											"name": "POP"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "SWAP3"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "SWAP2"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "POP"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "POP"
										},
										{
											"begin": 4906,
											"end": 5073,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17062,
											"end": 17392,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 17062,
											"end": 17392,
											"name": "JUMPDEST"
										},
										{
											"begin": 17153,
											"end": 17154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "AND"
										},
										{
											"begin": 17134,
											"end": 17141,
											"name": "DUP3"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "AND"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "EQ"
										},
										{
											"begin": 17134,
											"end": 17155,
											"name": "ISZERO"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "JUMPI"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "MLOAD"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "DUP2"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "MSTORE"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "ADD"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "DUP1"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "DUP1"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "ADD"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "DUP3"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "DUP2"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "SUB"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "DUP3"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "MSTORE"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "DUP2"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "MSTORE"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "ADD"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "DUP1"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH data",
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "SWAP2"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "CODECOPY"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "ADD"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "SWAP2"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "POP"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "POP"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "MLOAD"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "DUP1"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "SWAP2"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "SUB"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "SWAP1"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "REVERT"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 17126,
											"end": 17193,
											"name": "JUMPDEST"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 17246,
											"end": 17252,
											"name": "DUP2"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "MLOAD"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "DUP1"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "ADD"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "MSTORE"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "DUP1"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "DUP2"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "MSTORE"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "ADD"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "PUSH data",
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "SWAP2"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "CODECOPY"
										},
										{
											"begin": 17223,
											"end": 17232,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17233,
											"end": 17240,
											"name": "DUP7"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "AND"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "AND"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "DUP2"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "MSTORE"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "ADD"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "SWAP1"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "DUP2"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "MSTORE"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "ADD"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "KECCAK256"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "SLOAD"
										},
										{
											"begin": 17223,
											"end": 17245,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 17223,
											"end": 17245,
											"name": "SWAP1"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "SWAP3"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "SWAP2"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "SWAP1"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "AND"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 17223,
											"end": 17291,
											"name": "JUMPDEST"
										},
										{
											"begin": 17202,
											"end": 17211,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17212,
											"end": 17219,
											"name": "DUP5"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "AND"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "AND"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "DUP2"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "MSTORE"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "ADD"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "SWAP1"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "DUP2"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "MSTORE"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "ADD"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "KECCAK256"
										},
										{
											"begin": 17202,
											"end": 17291,
											"name": "DUP2"
										},
										{
											"begin": 17202,
											"end": 17291,
											"name": "SWAP1"
										},
										{
											"begin": 17202,
											"end": 17291,
											"name": "SSTORE"
										},
										{
											"begin": 17202,
											"end": 17291,
											"name": "POP"
										},
										{
											"begin": 17313,
											"end": 17337,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 17330,
											"end": 17336,
											"name": "DUP2"
										},
										{
											"begin": 17313,
											"end": 17325,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17313,
											"end": 17325,
											"name": "SLOAD"
										},
										{
											"begin": 17313,
											"end": 17329,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 17313,
											"end": 17329,
											"name": "SWAP1"
										},
										{
											"begin": 17313,
											"end": 17337,
											"name": "SWAP2"
										},
										{
											"begin": 17313,
											"end": 17337,
											"name": "SWAP1"
										},
										{
											"begin": 17313,
											"end": 17337,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17313,
											"end": 17337,
											"name": "AND"
										},
										{
											"begin": 17313,
											"end": 17337,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17313,
											"end": 17337,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 17313,
											"end": 17337,
											"name": "JUMPDEST"
										},
										{
											"begin": 17298,
											"end": 17310,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17298,
											"end": 17337,
											"name": "DUP2"
										},
										{
											"begin": 17298,
											"end": 17337,
											"name": "SWAP1"
										},
										{
											"begin": 17298,
											"end": 17337,
											"name": "SSTORE"
										},
										{
											"begin": 17298,
											"end": 17337,
											"name": "POP"
										},
										{
											"begin": 17375,
											"end": 17376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "AND"
										},
										{
											"begin": 17358,
											"end": 17365,
											"name": "DUP3"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "AND"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17379,
											"end": 17385,
											"name": "DUP4"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "MLOAD"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "DUP1"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "DUP3"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "DUP2"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "MSTORE"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "ADD"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "SWAP2"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "POP"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "POP"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "MLOAD"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "DUP1"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "SWAP2"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "SUB"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "SWAP1"
										},
										{
											"begin": 17349,
											"end": 17386,
											"name": "LOG3"
										},
										{
											"begin": 17062,
											"end": 17392,
											"name": "POP"
										},
										{
											"begin": 17062,
											"end": 17392,
											"name": "POP"
										},
										{
											"begin": 17062,
											"end": 17392,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11155,
											"end": 11370,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 11155,
											"end": 11370,
											"name": "JUMPDEST"
										},
										{
											"begin": 11245,
											"end": 11246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "AND"
										},
										{
											"begin": 11225,
											"end": 11233,
											"name": "DUP2"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "AND"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "EQ"
										},
										{
											"begin": 11225,
											"end": 11247,
											"name": "ISZERO"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "JUMPI"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP3"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MSTORE"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "CODECOPY"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "ADD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "MLOAD"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "DUP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SWAP2"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SUB"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "REVERT"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 11217,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11331,
											"end": 11339,
											"name": "DUP1"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "AND"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "DUP1"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "SWAP1"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "SLOAD"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "SWAP1"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "EXP"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "SWAP1"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "DIV"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "AND"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "AND"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "MLOAD"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "MLOAD"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "DUP1"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "SWAP2"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "SUB"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "SWAP1"
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "LOG3"
										},
										{
											"begin": 11356,
											"end": 11364,
											"name": "DUP1"
										},
										{
											"begin": 11347,
											"end": 11353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11347,
											"end": 11353,
											"name": "DUP1"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "EXP"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "DUP2"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "SLOAD"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "DUP2"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "MUL"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "NOT"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "AND"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "DUP4"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "AND"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "MUL"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "OR"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "SSTORE"
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "POP"
										},
										{
											"begin": 11155,
											"end": 11370,
											"name": "POP"
										},
										{
											"begin": 11155,
											"end": 11370,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "JUMPDEST"
										},
										{
											"begin": 5386,
											"end": 5393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "DUP4"
										},
										{
											"begin": 5416,
											"end": 5417,
											"name": "DUP4"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "MLOAD"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "DUP1"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "ADD"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "MSTORE"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "DUP1"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "DUP2"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "MSTORE"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "ADD"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "DUP2"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "MSTORE"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "POP"
										},
										{
											"begin": 5409,
											"end": 5412,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5409,
											"end": 5452,
											"name": "JUMPDEST"
										},
										{
											"begin": 5402,
											"end": 5452,
											"name": "SWAP1"
										},
										{
											"begin": 5402,
											"end": 5452,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "SWAP3"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "SWAP2"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5458,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"challeng/my_contract/1.usdt-token.sol\":\"SuperChal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"challeng/my_contract/1.usdt-token.sol\":{\"keccak256\":\"0xe49204884bfc5627d50d773cead0d48d0e33ae1e4bb2d042870aa7caadcd713d\",\"urls\":[\"bzz-raw://deaba8a171c799d3ca5e09848e96add0ef431ddb3de1a12b983f07b6e2408b38\",\"dweb:/ipfs/Qma4iDGoPx6BABLDQBB2oJFMo2XRvAg1HGiBC8f7pCQmAB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "challeng/my_contract/1.usdt-token.sol:SuperChal",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "challeng/my_contract/1.usdt-token.sol:SuperChal",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "challeng/my_contract/1.usdt-token.sol:SuperChal",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "challeng/my_contract/1.usdt-token.sol:SuperChal",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "challeng/my_contract/1.usdt-token.sol:SuperChal",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "challeng/my_contract/1.usdt-token.sol:SuperChal",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "challeng/my_contract/1.usdt-token.sol:SuperChal",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"challeng/my_contract/1.usdt-token.sol": {
				"ast": {
					"absolutePath": "challeng/my_contract/1.usdt-token.sol",
					"exportedSymbols": {
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						],
						"SuperChal": [
							825
						]
					},
					"id": 826,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "71:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "234:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "233:9:0"
									},
									"scope": 88,
									"src": "188:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "345:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "345:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "344:7:0"
									},
									"scope": 88,
									"src": "302:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "450:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "450:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:15:0"
									},
									"scope": 88,
									"src": "409:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "557:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "556:15:0"
									},
									"scope": 88,
									"src": "518:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "675:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:9:0"
									},
									"scope": 88,
									"src": "632:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "783:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "782:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "823:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:9:0"
									},
									"scope": 88,
									"src": "764:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1063:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1082:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1062:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1116:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1115:6:0"
									},
									"scope": 88,
									"src": "1045:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1408:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1464:9:0"
									},
									"scope": 88,
									"src": "1390:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2130:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2147:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2129:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2181:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2181:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2180:6:0"
									},
									"scope": 88,
									"src": "2113:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2507:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2523:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2506:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2576:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2575:6:0"
									},
									"scope": 88,
									"src": "2485:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2760:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2782:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2802:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2759:57:0"
									},
									"src": "2745:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2987:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3010:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2986:63:0"
									},
									"src": "2972:78:0"
								}
							],
							"scope": 826,
							"src": "98:2955:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3765:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3753:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:0:0"
									},
									"scope": 113,
									"src": "3741:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3836:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "3850:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3850:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3843:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3819:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3818:17:0"
									},
									"scope": 113,
									"src": "3774:92:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3929:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 856,
													"src": "3936:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3936:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "4073:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4073:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "4066:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3889:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3915:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3915:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3914:14:0"
									},
									"scope": 113,
									"src": "3872:215:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 826,
							"src": "3567:523:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4973:100:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4980:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4992:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4996:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "5012:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5017:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5012:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5020:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "5004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5004:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "5004:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "5066:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "5059:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4919:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4930:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4918:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4964:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4963:9:0"
									},
									"scope": 298,
									"src": "4906:167:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5395:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5413:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5416:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5419:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5409:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5409:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5402:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5340:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5386:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5385:9:0"
									},
									"scope": 298,
									"src": "5328:130:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5828:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5843:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5848:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5843:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5851:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "5835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5835:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5835:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5871:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5883:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5887:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5871:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5904:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5897:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5746:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5757:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5768:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5768:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5745:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5819:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5818:9:0"
									},
									"scope": 298,
									"src": "5733:178:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6209:364:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6429:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6434:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6429:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6425:37:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6437:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6453:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6446:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6470:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6482:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6486:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6482:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6470:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6502:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6506:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6502:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6502:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6514:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "6494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6494:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6494:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6566:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6559:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6155:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6166:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6154:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6200:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6199:9:0"
									},
									"scope": 298,
									"src": "6142:431:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "7084:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "7102:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7105:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7108:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "7098:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "7091:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7030:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7041:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7029:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7074:9:0"
									},
									"scope": 298,
									"src": "7017:126:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7702:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7780:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7784:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7780:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7787:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "7772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7772:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7772:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7807:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7807:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7819:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7823:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7807:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7923:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7916:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7620:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7631:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7642:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7642:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7619:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7692:9:0"
									},
									"scope": 298,
									"src": "7607:323:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8430:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8448:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8451:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8454:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8444:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8444:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8437:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8376:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8387:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8375:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8421:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8420:9:0"
									},
									"scope": 298,
									"src": "8363:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "9035:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "9050:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9055:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9050:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "9058:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "9042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9042:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "9042:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "9085:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "9089:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9085:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "9078:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8953:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8964:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8975:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8975:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8952:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "9026:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9025:9:0"
									},
									"scope": 298,
									"src": "8940:156:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 826,
							"src": "4671:4428:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9630:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9630:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9643:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9643:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9699:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9730:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9698:57:0"
									},
									"src": "9672:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9879:125:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9886:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9886:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9906:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9906:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9886:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9925:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9934:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9925:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9925:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9984:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9976:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9976:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9988:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9955:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9955:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9950:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9867:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9879:0:0"
									},
									"scope": 404,
									"src": "9855:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "10124:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "10138:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "10131:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10091:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10115:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10114:9:0"
									},
									"scope": 404,
									"src": "10077:73:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "10256:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "10271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "10281:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10281:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10271:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10295:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "10263:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10263:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "10263:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10337:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10253:2:0"
									},
									"src": "10235:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10725:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10758:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10774:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10766:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10766:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10737:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10737:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10732:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10784:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10801:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10793:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10784:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10784:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10715:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10715:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10705:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10725:0:0"
									},
									"scope": 404,
									"src": "10679:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "11016:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "11042:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "11023:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11023:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "11023:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "11006:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11006:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10981:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10980:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11016:0:0"
									},
									"scope": 404,
									"src": "10954:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "11210:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "11225:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11245:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11237:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11225:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11249:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "11217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11217:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "11217:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "11331:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "11302:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11302:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "11297:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11347:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11356:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11347:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11347:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "11183:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11182:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11210:0:0"
									},
									"scope": 404,
									"src": "11155:215:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 826,
							"src": "9610:1763:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11399:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11399:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11408:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11408:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11416:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11416:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 825,
							"linearizedBaseContracts": [
								825,
								404,
								88,
								113
							],
							"name": "SuperChal",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11435:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11429:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11448:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11462:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11471:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11462:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11482:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11515:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11524:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11515:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11544:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11535:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11555:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11591:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11591:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11624:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11624:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11651:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11651:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11677:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11677:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11724:229:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11731:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "5453757065724368616c",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11739:12:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_58a1beba67d9f191a374c1cd5738d4d09b22e5943d98113c002b9904cea937ea",
															"typeString": "literal_string \"TSuperChal\""
														},
														"value": "TSuperChal"
													},
													"src": "11731:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11731:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11758:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "544368616c",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11768:7:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_b8ddfb25f731b2686a258d8142713e04288c4daadeb378806b938fa3d697da97",
															"typeString": "literal_string \"TChal\""
														},
														"value": "TChal"
													},
													"src": "11758:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11758:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11782:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11794:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11782:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11782:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11803:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3231303030303030303030303030303030303030303030303030",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11818:26:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_21000000000000000000000000_by_1",
															"typeString": "int_const 21000000000000000000000000"
														},
														"value": "21000000000000000000000000"
													},
													"src": "11803:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "11803:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 450,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11851:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 453,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "11861:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11861:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11851:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 454,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11875:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11851:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "11851:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11918:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11910:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "11922:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11922:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11934:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11901:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11901:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "11896:51:0"
											}
										]
									},
									"documentation": null,
									"id": 467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11714:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11724:0:0"
									},
									"scope": 825,
									"src": "11703:250:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "12065:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "12079:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "12072:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12030:2:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "12056:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12055:9:0"
									},
									"scope": 825,
									"src": "12013:79:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "12201:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 481,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "12215:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "12208:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12168:2:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "12194:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12193:7:0"
									},
									"scope": 825,
									"src": "12151:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "12343:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "12357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "12350:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12302:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "12328:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12328:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12327:15:0"
									},
									"scope": 825,
									"src": "12287:83:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "12477:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12491:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "12484:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12436:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "12462:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12461:15:0"
									},
									"scope": 825,
									"src": "12423:79:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "12613:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12627:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "12620:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12578:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "12604:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12603:9:0"
									},
									"scope": 825,
									"src": "12558:87:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "12767:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 515,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12781:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "12791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12781:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 518,
												"nodeType": "Return",
												"src": "12774:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12717:17:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12757:9:0"
									},
									"scope": 825,
									"src": "12699:106:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "13076:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 530,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13093:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13093:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "13107:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "13118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "13083:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13083:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "13083:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13139:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 528,
												"id": 537,
												"nodeType": "Return",
												"src": "13132:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "13017:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "13036:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13016:35:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "13070:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13070:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13069:6:0"
									},
									"scope": 825,
									"src": "12999:150:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "13286:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 548,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "13300:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 550,
														"indexExpression": {
															"argumentTypes": null,
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "13312:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13300:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"argumentTypes": null,
														"id": 551,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "13319:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13300:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "13293:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13222:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13237:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13221:32:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13277:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13276:9:0"
									},
									"scope": 825,
									"src": "13203:130:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "13537:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13553:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13553:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "13567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "13576:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "13544:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13544:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "13544:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13597:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "13590:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13497:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13479:33:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13531:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13531:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13530:6:0"
									},
									"scope": 825,
									"src": "13463:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "14149:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 586,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "14166:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "14174:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "14185:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "14156:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14156:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "14156:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 592,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "14208:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 593,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14216:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14216:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "14268:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14276:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 595,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14230:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 597,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 596,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "14242:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14230:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 598,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "14250:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14250:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14230:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "14230:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14230:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "14199:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14199:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "14199:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14334:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 584,
												"id": 608,
												"nodeType": "Return",
												"src": "14327:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14074:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14090:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14109:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14073:51:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14143:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14143:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14142:6:0"
									},
									"scope": 825,
									"src": "14052:292:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "14812:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14828:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14828:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "14842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 630,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "14890:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 623,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14851:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 626,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 624,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14863:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14863:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14851:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 628,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "14877:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14851:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14851:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14851:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "14819:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14819:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14819:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14916:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 618,
												"id": 635,
												"nodeType": "Return",
												"src": "14909:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14753:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14770:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14752:37:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14806:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14806:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14805:6:0"
									},
									"scope": 825,
									"src": "14726:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "15489:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 647,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15505:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15505:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 649,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "15519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "15567:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15584:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 650,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15528:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 653,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 651,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15540:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15540:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15528:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 654,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "15554:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15528:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15528:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15528:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "15496:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15496:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "15496:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15639:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 645,
												"id": 663,
												"nodeType": "Return",
												"src": "15632:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15442:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15424:42:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15483:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15483:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15482:6:0"
									},
									"scope": 825,
									"src": "15398:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "15787:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 673,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15800:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "15814:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "15794:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15794:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "15794:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15835:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 671,
												"id": 679,
												"nodeType": "Return",
												"src": "15828:11:0"
											}
										]
									},
									"documentation": "@dev Burn `amount` tokens and decreasing the total supply.",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15749:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15748:16:0"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15781:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15781:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15780:6:0"
									},
									"scope": 825,
									"src": "15735:110:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "16384:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 691,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "16399:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16417:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16409:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16409:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16399:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16421:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "16391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16391:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "16391:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 700,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "16476:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16497:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16489:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16489:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16476:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16501:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "16468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16468:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "16468:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 708,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16548:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 710,
														"indexExpression": {
															"argumentTypes": null,
															"id": 709,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "16558:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16548:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 715,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "16590:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16598:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 711,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16568:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 713,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 712,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "16578:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16568:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16568:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16568:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16548:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "16548:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 720,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16646:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 722,
														"indexExpression": {
															"argumentTypes": null,
															"id": 721,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16656:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16646:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 727,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "16694:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 723,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16669:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 725,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 724,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "16679:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16669:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16669:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16669:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16646:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "16646:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 732,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "16722:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 733,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16730:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 734,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16741:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 731,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16713:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16713:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "EmitStatement",
												"src": "16708:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "16324:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "16340:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "16359:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16323:51:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16384:0:0"
									},
									"scope": 825,
									"src": "16305:449:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "17119:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 746,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "17134:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17153:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17145:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17145:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17134:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17157:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "17126:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17126:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "17126:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 754,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17202:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 756,
														"indexExpression": {
															"argumentTypes": null,
															"id": 755,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "17212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17202:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 761,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "17246:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17254:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 757,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17223:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 759,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 758,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "17233:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17223:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17223:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17223:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17202:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "17202:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 766,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17298:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 769,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "17330:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 767,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17313:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17313:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17313:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17298:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "17298:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 774,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "17358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17375:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17367:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17367:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 778,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "17379:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17349:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17349:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "EmitStatement",
												"src": "17344:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "17077:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "17094:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17076:33:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17119:0:0"
									},
									"scope": 825,
									"src": "17062:330:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "17884:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 792,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "17899:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17916:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17908:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17908:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17899:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17920:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "17891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17891:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "17891:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 801,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "17974:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17993:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17985:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17985:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17974:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17997:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "17966:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17966:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "17966:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 809,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18043:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 812,
															"indexExpression": {
																"argumentTypes": null,
																"id": 810,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "18055:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18043:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 813,
														"indexExpression": {
															"argumentTypes": null,
															"id": 811,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "18062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18043:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 814,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "18073:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18043:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "18043:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 818,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "18100:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 819,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "18107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 820,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "18116:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18091:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18091:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "EmitStatement",
												"src": "18086:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "17827:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "17842:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "17859:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17826:48:0"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17884:0:0"
									},
									"scope": 825,
									"src": "17809:320:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 826,
							"src": "11377:6755:0"
						}
					],
					"src": "71:18063:0"
				},
				"id": 0
			}
		}
	}
}